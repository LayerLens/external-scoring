import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[{'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)}, 6.0, 70], [{'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)}, 5.9, 67], [{'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)}, 5.7, 64], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 5.8, 67], [{}, 5.7, 64], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 5.8, 65], [{}, 9.9, 9999], [{}, 0, 0], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 5.5, 60], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 6.2, 75], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 5.8, 65], [{}, 5.0, 60], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.3352700555113355, 5.5], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 0, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 7.6771179872039275, 65], [{}, 60, 60], [{'Alice': (5.6, 60), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 3.775767325751101, 75], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 0, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 5.8, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.729862314625353, 6.3352700555113355], [{}, 59, 60], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 65, 7.6771179872039275], [{'Alice': (5.6, 60), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 4.258632338706851, 75], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 5.5, 59], [{}, 64, 5.7], [{}, 5.0, 9999], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.729862314625353, 5.5], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.729862314625353, 8.190457327073037], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 68, 67], [{}, 64, 64], [{}, 72, 64], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 7.6771179872039275, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 65, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 5.8, 9999], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 5.8, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.702463419036826, 5.5], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 6.347801785816663, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75)}, 6.729862314625353, 8.190457327073037], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 1, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.729862314625353, 3.660457791550787], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (5.49128356349249, 68)}, 5.8, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 5.5, 60], [{}, 55, 64], [{}, 5.0, 5.2], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 2, 67], [{}, 58, 0], [{}, 59, 59], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 60, 60], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 67, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.038735073603959, 6.3352700555113355], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 67, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 67, 68], [{}, 67, 65], [{}, 64, 4.5127014348401], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 64, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 3.9132721275728577, 5.49128356349249], [{}, 67, 55], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 66, 64], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 0, 66], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 60, 59], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 59, 60], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 7.421813010934091, 6.3352700555113355], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 59, 59], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 3.775767325751101, 6.3352700555113355], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 5.824887060150681, 5.11], [{'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 60, 60], [{}, 5.7, 5.7], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 5.5, 61], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65)}, 0, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.729862314625353, 10.135570714344796], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 63)}, 6.3352700555113355, 6.3352700555113355], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 63, 63], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 10.135570714344796, 59], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 10.135570714344796, 6.679165466227062], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 7.599846835005838, 4.5127014348401], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 58, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 55, 55], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'EEve': (6.2, 65)}, 5.8, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 5.8, 9999], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 0, 0], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 63, 61], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 68, 70], [{'Alice': (5.6, 60), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 65, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 67, 0], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 10.135570714344796, 10.135570714344796], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 9.297305401955562, 6.679165466227062], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Dave': (5.11, 72)}, 0, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.8967696393963465, 10.135570714344796], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Dave': (5.11, 72)}, 1, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 67, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Irene': (5.6, 9999)}, 6.2, 75], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (5.49128356349249, 68)}, 65, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 6.347801785816663, 66], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 75, 59], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 5.8, 5.8], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 5.8, 59], [{'Alice': (5.6, 60), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 75, 75], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 57, 58], [{}, 4.5127014348401, 11.052854689507116], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, 72, 72], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 57, 57], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Frank': (5.11, 66)}, 5.8, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 8.190457327073037, 9999], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 57, 6.1], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 55, 64], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 68, 71], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'EEve': (6.2, 65)}, 5.8, 59], [{'Alice': (5.6, 60), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, 58, 65], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72)}, 5.8, 68], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 6.8967696393963465, 10.135570714344796], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, 6.082623855502811, 67], [{'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, 4.5127014348401, 4.5127014348401]]
results = [{'Cierra Vega': (6.2, 70)}, {'Cierra Vega': (6.2, 70), 'Kierra Gentry': (6.0, 68)}, {'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)}, {'Bob': (6.1, 70)}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68)}, {}, {}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75)}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Harry': (6.2, 75)}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68)}, {}, {}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68)}, {}, {}, {}, {}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75)}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65)}, {}, {}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65)}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'HHarry': (6.627749952516089, 75)}, {}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Harry': (6.2, 75)}, {}, {}, {}, {}, {}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58), 'HHarry': (6.627749952516089, 75)}, {}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {}, {}, {}, {}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Harry': (6.2, 75), 'HHarry': (6.627749952516089, 75)}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Harry': (6.2, 75), 'HHarry': (6.627749952516089, 75)}, {'Bob': (6.1, 70)}, {}, {}, {}, {}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'EEve': (6.2, 65)}, {}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63)}, {}, {}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {}, {'Bob': (6.1, 70), 'Dave': (5.11, 72)}, {}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'Harry': (6.2, 75)}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65)}, {}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65)}, {}, {}, {}, {}, {'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Eve': (6.0, 68), 'EEve': (6.2, 65)}, {}, {'Bob': (6.1, 70)}, {}, {'Bob': (6.1, 70)}, {'Alice': (5.6, 60), 'Bob': (6.1, 70), 'Charlie': (5.9, 65), 'Dave': (5.11, 72), 'Eve': (6.0, 68), 'Frank': (5.7, 63), 'Grace': (5.2, 55), 'Harry': (6.2, 75), 'Irene': (5.4, 58)}]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "filter_data"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ["assert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},6.0,70)=={'Cierra Vega': (6.2, 70)}", "assert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},5.9,67)=={'Cierra Vega': (6.2, 70),'Kierra Gentry': (6.0, 68)}", "assert filter_data({'Cierra Vega': (6.2, 70), 'Alden Cantrell': (5.9, 65), 'Kierra Gentry': (6.0, 68), 'Pierre Cox': (5.8, 66)},5.7,64)=={'Cierra Vega': (6.2, 70),'Alden Cantrell': (5.9, 65),'Kierra Gentry': (6.0, 68),'Pierre Cox': (5.8, 66)}"]:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
