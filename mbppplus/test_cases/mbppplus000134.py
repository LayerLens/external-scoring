import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[[(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]], [[(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]], [[(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]], [[]], [[(1, ['Rash', 21]), (2, ['Varsha', 20]), (3, ['Kil', 19])]], [[(1, ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6]), (['G', 7], ['H', 8])]], [[(['A', 'x'], [1, 'y']), ([True, 3.14], ['hello', 'world'])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9])]], [[(['A', 1], ['B', 'C']), ('D', 2), ([3, 4], 5)]], [[(['A', ['B', ['C', ['D', ['E', 'F']]]]], 1)]], [[([[1, 'a'], [2, 'b']], [[3, 'c'], [4, 'd']]), ([[5, 'e'], [6, 'f']], [[7, 'g'], [8, 'h']])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', 'l']], ['m', 'n'])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', 1]], ['l', 2])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2])]], [[([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6]), (['G', 7], ['H', 8]), (['G', 7], ['H', 8])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(1, ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (3, ['Alice', ['Johnson', 28]])]], [[(['A'], ['A', ['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['B', ['C', ['D', ['E', 'F']]]]], 1)]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h')]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['B', ['C', ['D', ['E', 'F']]]]], 1)]], [[('h',), ([['a', 'b'], ['c', 'd']], ['e', 'f']), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2]), ([['a', 'b'], ['c', 'd']], ['e', 'f'])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1)]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6], ['F', 6])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(1, ['John', ['Doe', 25]]), (1, [['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (3, ['Alice', ['Johnson', 28]])]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[(1, ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (2,), (2, [['Smitth', 30], 'Jane', ['Smith', 30]]), (3,)]], [[(['A', 'x'], ['A'], [1, 'y']), (['A', 'x', 'A'], [1, 'y']), (['A', 'x'], [1, 'y'])]], [[(['C', 3], ['D', 4]), (['E', 6, 5], ['F', 6]), (['E', 5], ['F', 6])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], [['D', 7], 1], ['E', 9])]], [[(['C'], [4, ['B', 5]], ['C', 6]), (['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(['A', 'x'], ['d'], ['A'], [1, 'y'], ['A']), (['A', 'x'], ['A'], [1, 'y'], ['A']), (['A', 'x', 'A'], [1, 'y']), (['A', 'x'], [1, 'y'])]], [[(['Rash', 21],), (2, ['Varsha', 20]), (3, ['Kil', 19])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['B', ['C', ['D', ['E', 'F']]]]], 1, 1)]], [[(1, ['John', ['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6], ['C', 6]), ([['D', 7], 8], ['E', 9])]], [[([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[(['A', 1], ['c', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(['Rash', 21],), (2, ['Varsha', 20]), (3, ['Kil', 19]), (2, ['Varsha', 20])]], [[(['A', 'x'], [1, 'y'], [1, 'y']), ([True, 3.14], ['hello', 'world'], ['hello', 'world']), ([True, 3.14], ['hello', 'world'])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6], ['C', 6]), ([['D', 7], 8], ['E', 9])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['B', ['C', ['D', ['E', 'F']]]]], 1, ['A'], 1)]], [[([['g', 'h'], ['i', 'j']], ['k', 'l']), ([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ([['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2])]], [[(['A', 'x'], ['A'], [1, 'y'])]], [[([['g', 'h'], ['i', 'j']], ['ll', 'k', 'l']), ([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[([['g', 'h'], ['i', 'j']], ['k', 'l'], ['k', 'l']), ([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6], ['C', 6]), ([['D', 7], 8], ['E', 9]), ([['D', 7], 8], ['E', 9])]], [[(['Rash', 21],), (1, ['Rash', 21]), (2, ['Varsha', 20]), (3, ['Kil', 19])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h')]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O']), (['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), (['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H'])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]]), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1)]], [[(['A', ['B', ['C', ['D', ['E', 'F']]]]], 1, ['A', ['B', ['C', ['D', ['E', 'F']]]]]), (['A', ['B', ['C', ['D', ['E', 'F']]]]], 1)]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', 'l']], ['m', 'n']), ('g', 'h')]], [[('h',), ([['a', 'b'], ['c', 'd']], ['e', 'f']), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2])]], [[([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([['B', 5]], ['C', 6])]], [[('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2])]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], [['D', 7], 1], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(['A', 1], [2, 3]), ([['D', 7], 8], ['E', 9])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', 1]], ['l', 2]), ([['i', 'j'], ['k', 1]], ['l', 2])]], [[(1, ['John', ['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (3, ['Alice', ['Johnson', 28]])]], [[(['A', 1], [2, 3], ['A', 1]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], [['D', 7], 1], ['E', 9])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4])]], [[('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2])]], [[(1, ['John', ['Doe', 25]]), (1, [['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnsona', 'b'], ['c', 'd']], ['e', 'f'])]], [[(['A', 1], ['c', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6])]], [[(1, ['John', ['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]], ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (1, ['John', ['Doe', 25]], ['John', ['Doe', 25]])]], [[(['A', 'x'], [1, 'y']), ([True, 3.14], ['hello', 'world']), (['A', 'x'], [1, 'y'])]], [[(['B'], ['A', 1], ['B', 'C']), (['A', 1], ['B', 'C']), ('D', 2), ([3, 4], 5)]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', 'l']], ['m', 'n']), ([['a', 'b'], ['c', 'd']], ['e', 'f'])]], [[(2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (3,)]], [[([['a', 'aa', 'b'], ['c', 'd']],), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['B', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], ['A', ['B', ['C', ['D', ['E', 'F']]]]], 1, 1)]], [[(['A', 1], ['c', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H'], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[([2, 'C', 6], [4, ['B', 5]], ['C', 6]), (['A', 1], ['c', 1], [2, 3]), ([4, ['B', 5], ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g',), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ([['k', ['l', 'm']]], ['n', 2])]], [[([['g', 'h'], ['i', 'j']],), ([['g', 'h'], ['i', 'j']], ['k', 'l'])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['f']), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2])]], [[(['A', 1], [2, 3], ['A', 1]), (['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[(['A', 1], ['B', 'C']), ('D', 2), ([3, 5, 4], 5)]], [[([4, ['B', 5]], ['C', 6]), (['C', 6, 6],), ([['D', 7], 8], ['E', 9]), ([['B', 5]], ['C', 6])]], [[(['A', ['B', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], ['A', ['B', ['C', ['D', ['E', 'F']]]]], 1, 1)]], [[(['C', 3], ['D', 4]), (['E', 5], ['F', 6])]], [[(1, ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28], ['Johnson', 28]], ['Alice', ['Johnson', 28]]), (1, ['John', ['Doe', 25]])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('gF', 'g', 'h'), ([['a', 'aa', 'b'], ['c', 'd']],), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2], [['k', ['l', 'm']]])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], [['k', ['l', 'm']]], ['n', 2]), ('g', 'h')]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H'], ['G', 'H']), ([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O']), (['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H'])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6]), (['G', 7], ['H', 8]), (['E', 5], ['F', 6])]], [[(1, ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]], 2), (3, ['Alice', ['Johnson', 28], ['Johnson', 28]], ['Alice', ['Johnson', 28]]), (3, ['Alice', ['Johnson', 28], ['Johnson', 28]], ['Alice', ['Johnson', 28]])]], [[(['A', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6], ['C', 6]), ([['D', 7], 8], ['E', 9]), (['A', 1], [2, 3]), (['A', 1], [2, 3])]], [[(['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), (['SmithH', 'G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]]), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['a', 'aa', 'b'], ['c', 'd']], ['e', 'f'])]], [[([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'])]], [[(['A', 1], ['B', 2]), (['C', 3], ['D', 4]), (['E', 5], ['F', 6]), (['A', 1], ['B', 2])]], [[([4, ['B', 5], 4], [4, ['B', 5]], ['C', 6]), (['A', 1], ['c', 1], [2, 3]), ([4, ['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9]), ([4, ['B', 5]], ['C', 6])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ([['i', 'j'], ['k', 'l']], ['m', 'n'])]], [[([3.14], [True, 3.14], ['hello', 'world']), (['A', 'x'], [1, 'y']), ([True, 3.14],)]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ([['a', 'b'], ['c', 'd']], ['e', 'f'])]], [[(['A', 'x'],), (['A', 'x'], [1, 'y']), ([True, 3.14], ['hello', 'world'])]], [[(['C', 3], ['D', 4]), ([3], ['D', 4]), (['E', 5], ['F', 6])]], [[([['A', 'B'], ['C', ['D', ['E', 'F']]]], ['G', 'H']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'], ['N', 'O']), ([['I', 'J'], ['K', ['L', 'M']]], ['N', 'O'], ['N', 'O'])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f']), ('g', 'h'), ([['i', 'F', 'j'], ['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2])]], [[('g', 'h'), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']], ['i', 'j']], ['n', 2]), ([['i', 'j'], ['k', ['l', 'm']]],)]], [[([['a', 'b'], ['c', 'd']], ['e']), ([['a', 'b'], ['c', 'd']], ['e', 'f'])]], [[(['John', ['Doe', 25]], ['John', ['Doe', 25]]), (1, ['John', ['Doe', 25]], ['John', ['Doe', 25]]), (2, ['Jane', ['Smith', 30]]), (3, ['Alice', ['Johnson', 28]]), (['John', ['Doe', 25]], ['John', ['Doe', 25]])]], [[([['a', 'b'], ['c', 'd']], ['e', 'f'], ['e', 'f']), ([['a', 'b'], ['c', 'd']], ['e', 'f'])]], [[([4, ['B', 5]], [['B', 5]], ['C', 6, 6]), ([4, ['B', 5]], ['C', 6]), ([4, ['B', 5]], ['C', 6, 6]), ([['D', 7], 8], ['E', 9]), ([['B', 5]], ['C', 6]), ([['D', 7], 8], ['E', 9])]], [[(['A'], [['B', ['C', ['D', ['E', 'F']]]]], 1), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]]), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]]), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]]), (['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, 1)]]]
results = [[21, 20, 19], [36, 25, 45], [14, 36, 56], [], [['Rash', 21], ['Varsha', 20], ['Kil', 19]], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]]], [['B', 2], ['D', 4], ['F', 6]], [['B', 2], ['D', 4], ['F', 6], ['H', 8]], [[1, 'y'], ['hello', 'world']], [[2, 3], ['C', 6], ['E', 9]], [['B', 'C'], 2, 5], [1], [[[3, 'c'], [4, 'd']], [[7, 'g'], [8, 'h']]], [['e', 'f'], ['k', 'l']], [['e', 'f'], 'h', ['m', 'n']], [['e', 'f'], 'h', ['l', 2]], [['e', 'f'], 'h', ['n', 2]], [['G', 'H'], ['N', 'O']], [['B', 2], ['D', 4], ['F', 6], ['H', 8], ['H', 8]], [['e', 'f'], 'h', ['n', 2]], [[2, 3], ['C', 6], ['E', 9], ['C', 6]], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['Alice', ['Johnson', 28]]], [1, 1], [['e', 'f'], 'h'], [1, 1], ['h', ['e', 'f'], ['n', 2], ['e', 'f']], [1, 1], [['B', 2], ['D', 4], ['F', 6]], [[2, 3], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], [['John', ['Doe', 25]], ['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['Alice', ['Johnson', 28]]], [['G', 'H'], ['G', 'H'], ['N', 'O']], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], 2, [['Smitth', 30], 'Jane', ['Smith', 30]], 3], [[1, 'y'], [1, 'y'], [1, 'y']], [['D', 4], ['F', 6], ['F', 6]], [[2, 3], ['C', 6], ['E', 9]], [['C', 6], [2, 3], ['C', 6], ['E', 9], ['C', 6]], [['A'], ['A'], [1, 'y'], [1, 'y']], [['Rash', 21], ['Varsha', 20], ['Kil', 19]], [1, 1], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]]], [[2, 3], ['C', 6], ['C', 6], ['E', 9]], [['k', 'l']], [[2, 3], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], [['Rash', 21], ['Varsha', 20], ['Kil', 19], ['Varsha', 20]], [[1, 'y'], ['hello', 'world'], ['hello', 'world']], [[2, 3], ['C', 6], ['E', 9]], [1, 1], [['k', 'l'], ['k', 'l']], [['e', 'f'], 'h', ['n', 2], ['n', 2], ['n', 2]], [[1, 'y']], [['ll', 'k', 'l'], ['k', 'l']], [['k', 'l'], ['k', 'l']], [[2, 3], ['C', 6], ['C', 6], ['E', 9], ['E', 9]], [['Rash', 21], ['Rash', 21], ['Varsha', 20], ['Kil', 19]], [['e', 'f'], 'h'], [['G', 'H'], ['G', 'H'], ['N', 'O'], ['G', 'H'], ['G', 'H']], [1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1], [['A', ['B', ['C', ['D', ['E', 'F']]]]], 1], [['e', 'f'], 'h', ['m', 'n'], 'h'], ['h', ['e', 'f'], ['n', 2]], [['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], ['h', ['n', 2]], [['G', 'H'], ['N', 'O']], [[2, 3], ['C', 6], ['E', 9], ['C', 6]], [[2, 3], ['E', 9]], [['e', 'f'], 'h', ['l', 2], ['l', 2]], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['Alice', ['Johnson', 28]]], [['A', 1], ['C', 6], ['E', 9]], [['B', 2], ['D', 4]], ['h', ['n', 2], ['n', 2]], [['John', ['Doe', 25]], ['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], 3], [1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]]], [['e', 'f']], [[2, 3], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6], ['C', 6, 6]], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['John', ['Doe', 25]]], [[1, 'y'], ['hello', 'world'], [1, 'y']], [['B', 'C'], ['B', 'C'], 2, 5], [['e', 'f'], 'h', ['m', 'n'], ['e', 'f']], [['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], 3], [[['a', 'aa', 'b'], ['c', 'd']], 'h', ['n', 2]], [['e', 'f'], 'h', ['n', 2], ['n', 2]], [1, 1], [[2, 3], ['C', 6], ['E', 9], ['C', 6]], [['G', 'H'], ['G', 'H'], ['G', 'H'], ['N', 'O']], [['C', 6], [2, 3], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], [['e', 'f'], 'g', ['n', 2], ['n', 2]], [[['g', 'h'], ['i', 'j']], ['k', 'l']], [['f'], ['n', 2], ['n', 2]], [['A', 1], [2, 3], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], [['B', 'C'], 2, 5], [['C', 6], ['C', 6, 6], ['E', 9], ['C', 6]], [1], [['D', 4], ['F', 6]], [['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['John', ['Doe', 25]]], [['e', 'f'], 'h', [['a', 'aa', 'b'], ['c', 'd']], ['n', 2], [['k', ['l', 'm']]]], [['e', 'f'], 'h', ['n', 2], 'h'], [['G', 'H'], ['G', 'H'], ['G', 'H'], ['N', 'O'], ['G', 'H']], [['B', 2], ['D', 4], ['F', 6], ['H', 8], ['F', 6]], [['John', ['Doe', 25]], 2, ['Alice', ['Johnson', 28]], ['Alice', ['Johnson', 28]]], [[2, 3], ['C', 6], ['C', 6], ['E', 9], [2, 3], [2, 3]], [['G', 'H'], [['A', 'B'], ['C', ['D', ['E', 'F']]]], ['N', 'O']], [['e', 'f'], 'h', ['e', 'f']], [['G', 'H'], ['N', 'O'], ['N', 'O']], [['B', 2], ['D', 4], ['F', 6], ['B', 2]], [['C', 6], [2, 3], ['C', 6], ['E', 9], ['C', 6]], [['e', 'f'], ['m', 'n']], [['hello', 'world'], [1, 'y'], [True, 3.14]], [['e', 'f'], ['e', 'f']], [['A', 'x'], [1, 'y'], ['hello', 'world']], [['D', 4], ['D', 4], ['F', 6]], [['G', 'H'], ['N', 'O'], ['N', 'O']], [['e', 'f'], 'h', ['n', 2], ['n', 2]], ['h', ['n', 2], ['n', 2], ['n', 2], [['i', 'j'], ['k', ['l', 'm']]]], [['e'], ['e', 'f']], [['John', ['Doe', 25]], ['John', ['Doe', 25]], ['Jane', ['Smith', 30]], ['Alice', ['Johnson', 28]], ['John', ['Doe', 25]]], [['e', 'f'], ['e', 'f']], [['C', 6, 6], ['C', 6], ['C', 6, 6], ['E', 9], ['C', 6], ['E', 9]], [1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1, ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], ['A', ['', ['C', ['D', ['E', 'F']]]], ['B', ['C', ['D', ['E', 'F']]]]], 1]]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "rear_extract"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ["assert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]", "assert rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]) == [36, 25, 45]", "assert rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]) == [14, 36, 56]"]:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
