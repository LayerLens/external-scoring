import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[['4', '12', '45', '7', '0', '100', '200', '-12', '-500']], [['2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111', '10', '9', '8', '7', '6', '5', '4', '3', '2', '1']], [['5', '-3', '7', '2', '-5', '5', '2', '-3', '1', '-7', '4', '1', '-2', '4']], [[]], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1']], [['5', '-3', '7', '2', '2', '5', '2', '-3', '1', '-7', '4', '1', '-2', '28', '4']], [['5', '-3', '7', '2', '-5', '5', '2', '-3', '1', '-7', '4', '1', '4', '1']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111', '10', '9', '8', '7', '6', '66266666', '5', '4', '3', '2', '1', '-4444']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '5']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '6']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['5', '-3', '7', '2', '-5', '5', '2', '-4444', '1', '-7', '4', '1', '4', '1', '-3']], [['5', '-3', '7', '2', '2', '5', '2', '-3', '1', '-7', '4', '1', '-2', '28', '2', '4']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '22', '18', '20', '22', '24', '26', '28', '30']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '777777724', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '6', '14']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11']], [['5', '-3', '7', '2', '5', '2', '-3', '1', '-7', '4', '1', '28', '4']], [['155', '-3', '7', '2', '2', '5', '2', '-3', '1', '-7', '4', '1', '-2', '28', '1']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111', '10', '9', '8', '7', '6', '66266666', '5', '4', '3', '2', '1', '-4444', '66266666']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '13']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '917', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11']], [['5', '-3', '7', '2', '-5', '5', '2', '15', '1', '-7', '666666', '1', '-2', '4']], [['1', '3', '5', '7', '18', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '124', '6', '14']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '5']], [['1', '3', '5', '7', '1', '3', '22213', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['5', '-3', '7', '2', '2', '5', '2', '-43', '1', '4', '1', '-2', '28', '4']], [['1', '3', '514', '7', '1', '3', '13', '15', '17', '5', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '5']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '9', '1', '11', '6', '8', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '6', '14', '17']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11', '13', '20']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11', '5']], [['5', '-3', '7', '5', '2', '-3', '1', '-7', '4', '1', '28', '4']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '22', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11', '13', '20', '1']], [['1', '3', '5', '7', '-5', '18', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '12', '4', '10', '14', '16', '18', '20', '22', '26', '28', '30', '124', '6']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111222', '10', '124', '7', '6', '5', '4', '3', '2', '1']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '1015', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '15', '7 ', '9', '1', '11', '6', '8', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '155', '30', '1', '6', '14']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1', '6']], [['5', '-3', '7', '5', '2', '-3', '1', '-7', '4', '1', '28', '4', '28']], [['10000000000', '99999999', '88888888', '2218', '7777777', '666666', '-55555', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1']], [['1', '3', '5', '7', '1', '3', '13', '15', '1710', '5', '7 ', '917', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11']], [['5', '-3', '7', '2', '2', '5', '2', '-43', '-2', '4', '1', '-2', '28', '4']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30']], [['1', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '5']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-333', '222', '66', '111', '10', '9', '8', '7', '6', '5', '4', '3', '2', '1', '88888888']], [['5', '-3', '7', '2', '2', '5', '2', '-43', '124', '1', '4', '1', '-2', '28', '4']], [['5', '-3', '7', '5', '2', '-3', '1', '-7', '4', '100000000001', '28', '4', '28']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1', '6', '7777777']], [['1', '3', '5', '7', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['1', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '666666', '30', '1', '5']], [['1', '3', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '28', '30', '1', '11']], [['5', '-3', '7', '2', '2', '5', '2', '-43', '124', '1', '4', '1', '-2', '28', '4', '28']], [['1', '3', '5', '7', '1', '3', '15', '17', '5', '7 ', '9', '1', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '11', '5', '1']], [['5', '-3', '7', '2', '-5', '5', '2', '15', '1', '-7', '666666', '1', '111222', '4']], [['1', '3', '5', '7', '1', '3', '13', '4', '17', '5', '7 ', '-5', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '5']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '22', '12', '4', '10', '14', '16', '18', '22', '24', '26', '28', '30', '11', '13', '20', '1']], [['1', '3', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12', '7']], [['5', '-3', '7', '44', '2', '99999999', '2', '5', '2', '-43', '-2', '4', '1', '-2', '28', '4', '-2']], [['1', '-5', '5', '7', '1', '3', '22213', '15', '17', '17', '7 ', '-7', '1', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['5', '-3', '7', '44', '2', '99999999', '2', '5', '2', '-43', '-2', '4', '1', '-2', '28', '4', '-2', '-3', '2', '-43']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '2', '12', '4', '10', '16', '18', '20', '22', '24', '26', '28', '30', '13']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '777777724', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '2']], [['1', '3', '5', '7', '18', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '124', '6', '14', '3']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '27777777246', '30']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '115', '1']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '22']], [['55', '-3', '7', '2', '-5', '5', '2', '-3', '1', '-7', '4', '1', '-2', '4']], [['1', '3', '5', '7', '13', '15', '17', '5', '7 ', '9', '1', '11', '110', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1']], [['10000000000', '99999999', '88888888', '7777777', '88', '666666', '-55555', '-4444', '-333', '222', '111', '10', '9', '7', '6', '5', '4', '3', '2', '1']], [['5', '7', '5', '2', '-3', '1', '-7', '4', '1', '28', '4', '28']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '777777724', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '2', '30']], [['1', '3', '5', '7', '18', '99999999', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '124', '6', '14', '3']], [['1', '3', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12', '12']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111', '10', '9', '8', '-444', '7', '6', '5', '4', '3', '2', '1']], [['1', '5', '7', '1', '3', '13', '4', '17', '5', '7 ', '-5', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '-444', '24', '26', '28', '30', '5']], [['10000000000', '22213', '7777777', '666666', '-55555', '-4444', '-333', '222', '111222', '10', '15', '8', '7', '6', '5', '4', '3', '2', '1', '6', '7777777']], [['10000000000', '99999999', '88888888', '7777777', '666666', '-55555', '-4444', '-333', '222', '111', '010', '9', '8', '-444', '7', '6', '5', '4', '3', '2', '1']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '17']], [['155', '-3', '7', '2', '2', '2', '-3', '1', '-7', '4', '1', '-2', '28', '1']], [['10000000000', '99999999', '88888888', '2218', '7777777', '666666', '-55555', '-333', '222', '111222', '10', '15', '8', '267', '6', '5', '4', '3', '2', '1', '7']], [['55', '-3', '7', '2', '-5', '5', '-3', '1', '-7', '4', '1', '-2', '4']], [['1', '3', '7', '1', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '27777777246', '30']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '6']], [['1', '3', '7', '1', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '8', '2', '12', '4', '10', '-3', '16', '18', '20', '22', '24', '26', '27777777246', '30', '666666']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '14', '16', '18', '20', '22', '24', '26', '28', '30']], [['1', '3', '7', '1', '3', '13', '15', '17', '5', '7  ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12']], [['1', '3', '99999999', '7', '1', '3', '13', '15', '17', '5', '7  ', '9', '1', '11', '6', '8', '2', '12', '10', '14', '16', '15155', '18', '20', '22', '24', '26', '28', '30', '30', '20', '12']], [['1', '3', '7', '1', '3', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '24', '01014', '26', '28', '30', '30', '20', '12', '12']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '1']], [['1', '3', '5', '7', '1', '13', '15', '17', '5', '7 ', '9', '1', '11', '6', '8', '12', '4', '10', '777777724', '16', '18', '20', '22', '24', '26', '28', '30', '1', '6', '14']], [['1', '3', '5', '7', '1', '3', '13', '15', '-4444', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '13']], [['1', '516', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '7 ', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '17', '5']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '18', '16']], [['1', '3', '5', '7', '13', '15', '17', '5', '7 ', '9', '1', '11', '110', '6', '8', '2', '12', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '30']], [['5', '-3', '7', '2', '-5', '5', '2', '-4444', '1', '-7', '44', '1', '4', '1', '-3']], [['1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '-7', '1', '11', '6', '8', '2', '12', '777777724', '4', '10', '14', '16', '18', '20', '22', '24', '26', '28', '30', '1', '7 ']]]
results = [[-500, -12, 0, 4, 7, 12, 45, 100, 200], [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9], [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111, 222, 666666, 7777777, 88888888, 99999999, 10000000000], [-7, -5, -3, -3, -2, 1, 1, 2, 2, 4, 4, 5, 5, 7], [], [1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 222, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [-7, -3, -3, -2, 1, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28], [-7, -5, -3, -3, 1, 1, 1, 2, 2, 4, 4, 5, 5, 7], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-55555, -4444, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111, 222, 666666, 7777777, 66266666, 88888888, 99999999, 10000000000], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-4444, -7, -5, -3, -3, 1, 1, 1, 2, 2, 4, 4, 5, 5, 7], [-7, -3, -3, -2, 1, 1, 2, 2, 2, 2, 4, 4, 5, 5, 7, 28], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 22, 24, 26, 28, 30], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 777777724], [1, 1, 1, 1, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, -3, -3, 1, 1, 2, 2, 4, 4, 5, 5, 7, 28], [-7, -3, -3, -2, 1, 1, 1, 2, 2, 2, 4, 5, 7, 28, 155], [-55555, -4444, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111, 222, 666666, 7777777, 66266666, 66266666, 88888888, 99999999, 10000000000], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 917], [-7, -5, -3, -2, 1, 1, 2, 2, 4, 5, 5, 7, 15, 666666], [1, 1, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 14, 15, 16, 17, 18, 18, 20, 22, 24, 26, 28, 30, 124], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 22213], [-43, -3, -2, 1, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 514], [-55555, -333, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 222, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [1, 1, 1, 1, 3, 4, 5, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14, 14, 15, 16, 17, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 11, 12, 13, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 7, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, -3, -3, 1, 1, 2, 4, 4, 5, 5, 7, 28], [1, 1, 1, 1, 1, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 11, 12, 13, 13, 14, 15, 16, 17, 18, 20, 20, 22, 22, 24, 26, 28, 30], [-5, 1, 1, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 18, 20, 22, 26, 28, 30, 124], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 10, 124, 222, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 30], [1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 1015], [1, 1, 1, 1, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 14, 15, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 155], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 6, 7, 8, 10, 15, 222, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [-7, -3, -3, 1, 1, 2, 4, 4, 5, 5, 7, 28, 28], [-55555, -333, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 222, 2218, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 30, 917, 1710], [-43, -3, -2, -2, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28], [1, 1, 2, 3, 4, 5, 5, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-55555, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 66, 111, 222, 666666, 7777777, 88888888, 88888888, 99999999, 10000000000], [-43, -3, -2, 1, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28, 124], [-7, -3, -3, 1, 2, 4, 4, 5, 5, 7, 28, 28, 100000000001], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 6, 7, 8, 10, 15, 222, 111222, 666666, 7777777, 7777777, 88888888, 99999999, 10000000000], [1, 1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 30, 666666], [1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30], [1, 1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 28, 30], [-43, -3, -2, 1, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28, 28, 124], [1, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 7, 7, 8, 9, 10, 11, 11, 12, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, -5, -3, 1, 1, 2, 2, 4, 5, 5, 7, 15, 111222, 666666], [-5, 1, 1, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 11, 12, 13, 13, 14, 15, 16, 17, 18, 20, 22, 22, 24, 26, 28, 30], [1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30], [-43, -3, -2, -2, -2, 1, 2, 2, 2, 4, 4, 5, 5, 7, 28, 44, 99999999], [-7, -5, 1, 1, 1, 1, 2, 3, 4, 5, 7, 7, 8, 10, 11, 12, 14, 15, 16, 17, 17, 18, 20, 22, 24, 26, 28, 30, 22213], [-43, -43, -3, -3, -2, -2, -2, 1, 2, 2, 2, 2, 4, 4, 5, 5, 7, 28, 44, 99999999], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 9, 10, 11, 12, 13, 13, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [-7, 1, 1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 777777724], [1, 1, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 13, 14, 14, 15, 16, 17, 18, 18, 20, 22, 24, 26, 28, 30, 124], [1, 1, 2, 3, 4, 5, 5, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 27777777246], [-55555, -333, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 115, 222, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 22, 24, 26, 28, 30], [-7, -5, -3, -3, -2, 1, 1, 2, 2, 4, 4, 5, 7, 55], [1, 1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 110], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 7, 9, 10, 88, 111, 222, 666666, 7777777, 88888888, 99999999, 10000000000], [-7, -3, 1, 1, 2, 4, 4, 5, 5, 7, 28, 28], [-7, 1, 1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 30, 777777724], [1, 1, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 13, 14, 14, 15, 16, 17, 18, 18, 20, 22, 24, 26, 28, 30, 124, 99999999], [1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30], [-55555, -4444, -444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111, 222, 666666, 7777777, 88888888, 99999999, 10000000000], [-444, -5, 1, 1, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 24, 26, 28, 30], [-55555, -4444, -333, 1, 2, 3, 4, 5, 6, 6, 7, 8, 10, 15, 222, 22213, 111222, 666666, 7777777, 7777777, 10000000000], [-55555, -4444, -444, -333, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111, 222, 666666, 7777777, 88888888, 99999999, 10000000000], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 18, 20, 22, 24, 26, 28, 30], [-7, -3, -3, -2, 1, 1, 1, 2, 2, 2, 4, 7, 28, 155], [-55555, -333, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 222, 267, 2218, 111222, 666666, 7777777, 88888888, 99999999, 10000000000], [-7, -5, -3, -3, -2, 1, 1, 2, 4, 4, 5, 7, 55], [1, 1, 2, 3, 4, 5, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 30, 27777777246], [1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 30], [-3, 1, 1, 2, 3, 4, 5, 7, 7, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 24, 26, 30, 666666, 27777777246], [1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30], [1, 1, 1, 2, 3, 3, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13, 14, 15, 16, 17, 18, 20, 20, 22, 24, 26, 28, 30, 30, 15155, 99999999], [1, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 12, 14, 15, 16, 17, 18, 20, 20, 24, 26, 28, 30, 30, 1014], [-7, 1, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 1, 3, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 777777724], [-4444, -7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30], [1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 7, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 18, 20, 22, 24, 26, 28, 30, 516], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 16, 17, 18, 18, 20, 22, 24, 26, 28, 30], [1, 1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 30, 110], [-4444, -7, -5, -3, -3, 1, 1, 1, 2, 2, 4, 5, 5, 7, 44], [-7, 1, 1, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 26, 28, 30, 777777724]]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "sort_numeric_strings"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ["assert sort_numeric_strings( ['4','12','45','7','0','100','200','-12','-500'])==[-500, -12, 0, 4, 7, 12, 45, 100, 200]", "assert sort_numeric_strings(['2','3','8','4','7','9','8','2','6','5','1','6','1','2','3','4','6','9','1','2'])==[1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9]", "assert sort_numeric_strings(['1','3','5','7','1', '3','13', '15', '17','5', '7 ','9','1', '11'])==[1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17]"]:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
