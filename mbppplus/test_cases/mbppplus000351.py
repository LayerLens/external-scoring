import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[[0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]], [[10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]], [['a', 'a', 'b', 'c', 'd', 'd']], [[2, 5, 3, 1, 1, 0, 4, 4, 2, 3, 3]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', 5]], [['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'c', 'd', 'd', 'd', 'd']], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e']], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', False, True, 0, 'f', 1.5]], [[0, 0, 1, 1, 1, 'a', 'a', 'b', 'b', 'b', [1, 2, 3], [1, 2, 3], 'c', {'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [[]], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5]], [['ae', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e']], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', False, True, 0, 'f', 1.5, 2]], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b']], [['a', 1, 'ae', 2, 'c', 3, 'd', 4, 'e', 'e']], [['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'c', 'd', '', 'd', 'd']], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'd', '', 'd', 'd']], [['ae', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', 3]], [[2, 5, 1, 3, 1, 1, 0, 4, 4, 4, 2, 3, 3]], [['a', 1, 'ae', 2, 'c', 3, 'd', 4, 'e']], [['a', 'b', 2, 3, 3, 'b', 'd', 4, 'e', 'e']], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', False, True, 0, 'f', 1.5, 'd']], [['ae', 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', 3]], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'd', 'John', 'bb', 'd', 'd', 'a', 'a']], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, False, 4, 'c', 5]], [[2, 5, 1, 3, 1, 0, 4, 4, 4, 2, 3, 3]], [['a', 1, 'b', 2, 'ae', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b']], [['ae', 1, 'b', 2, 'c', 'ae', 3, 3, 'd', 4, 'e', 'e']], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True]], [['a', 1, 'b', 2, 'c', 3, 'd', 'bbe', 4, 'e', 'e', False, True, 0, 'f', 1.5]], [['a', 'a', 'a', 'a', 'b', 'b', 'b', 'c', 'd', 'd', 'd', 'd', 'a']], [['a', 1, 'bb', 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b']], [['a', 1, 'b', 'f', 2, 'c', 3, 3, 'e', 'e']], [['a', 1, 'b', 2, 'age', 3, 'd', 'bbe', 4, 'e', 'e', False, True, 0, 'f', 1.5]], [[True, False, True]], [[2, 5, 1, 2, 1, 0, 4, 4, 4, 2, 3, 3, 3]], [[0, 0, 1, 1, 1, 'a', 'a', 'b', 'b', 'b', [1, 2, 3], [1, 2, 3], 'c', {'name': 'John', 'age': 25}, 'd', {'name': 'John', 'age': 25}, 'b']], [[2, 5, 1, 2, 1, 0, 4, 4, 4, 2, 3, 3, 5, 3]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True, False, True]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, False, 4, 'c', 5, 4]], [[2, 5, 25, 1, 1, 0, 4, 4, 2, 3]], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', False, 1.8236031742951366, True, 0, 'f', 1.5]], [['a', 'a', 'a', 'a', 'b', 'b', 'b', 'c', 'd', 'd', 'd', 'd', 'a', 'd']], [['a', 1, 'bb', 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b', 1.5]], [['ae', 5, 'b', 2, 3, 3, 'd', 4, 25, 'e', 'e', 3, 4]], [[3, 2, 5, 1, 3, 2, 1, 0, 4, 4, 4, 2, 3, 3, 3]], [[0, 3, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', 5]], [[0, 3, 'a', 2.5, True, 0, 'b', 3, False, 4.5, 4, 'c', 5]], [[0, 3, 'a', 2.5, True, 0, 'b', 3, False, 4.5, 4, 'c', 5, False, 3]], [['ae', 'b', 2, 'c', 3, 'd', 4, 'e', 'e', 3]], [['ae', 1, 3, 'b', 2, 'age', 3, 3, 'd', 4, 'e', 'e', 3]], [['a', 4, 'b', 2, 'ae', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b']], [['a', 2.5, True, 'b', 3, False, 4.999025494806807, False, 4, 'c', 5]], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'd', 'John', 'bb', 'd', 'd', 'a', 'a', 'c']], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True, True]], [[True, False, True, True]], [[0, 'a', 2.5, True, 'b', 3, '', False, 4.5, 4, 'c', True, 5, True]], [[3, 2, 5, 1, 3, 2, 1, 0, 4, 4, 4, 4, 2, 3, 3, 3]], [[2, 5, 3, 1, 1, 0, 4, 4, 2, 3, 3, 3]], [[0, 'a', 2.5, True, 'b', '', False, 4.5, 4, 'c', True, 5, True]], [['a', 1, 'b', 'f', 2, 'c', 3, 'e']], [[0, 3, 'a', 2.5, True, 'b', 3, False, 4, 'c']], [['ae', 1, 3, 'a', 2, 'age', 3, 3, 'd', 4, 'bbe', 'e', 3]], [[0, 'a', 2.5, True, 'b', 3, '', False, 3.576699300614228, 4, 'c', True, 5, True]], [['a', 4, 'b', 'ff', 2, 'ae', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'b']], [[0, 'a', 2.5, True, 'bb', 'b', '', False, 4.5, 4, 'c', True, 5, True]], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', True, 0, 'f', 1.5]], [['a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'abb', False, True, 0, 'f', 1.5, 2]], [[0, {'name': 'John', 'age': 24}, 0, 1, 1, 1, 'a', 'a', 'b', 'b', 'b', [1, 2, 3], [1, 2, 3], 'c', {'name': 'John', 'age': 25}, {'name': 'John', 'age': 24}, 'a', 'a']], [['a', 1, 'bb', 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 0.7644455113748416, 'b', 1.5, 'bb']], [['a', 'b', 2, 3, 'b', 'd', 4, 'e', 'e', 4]], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'd', 'John', 'bb', 'ae', 'd', 'd', 'a', 'a', 'c']], [[0, 1, 1, 1, 'a', 'a', 'b', 'b', 'b', [1, 2, 3], [1, 2, 3], 'c', {'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [['ae', 1, 'b', 5, 2, 'c', 'ae', 3, 3, 'd', 4, 'e', 'e']], [[True, False, True, False, True]], [[3, 2, 5, 3, 3, 2, 1, 0, 4, 4, 4, 4, 5, 2, 3, 4, 3]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True, 4]], [['a', 'b', 2, 3, 3, 'f', 'd', 4, 3, 'e', 'e']], [[0, 'a', 2.5, 'abb', True, 'b', 3, '', False, 4.5, 4, 'c', True, 5, True]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, False, 4, 'c', 5, 5]], [['a', 1, 'ae', 2, 'aa', 'c', 3, 'd', 4, 'e']], [[0, 0, 1, 1, 1, 'a', 'a', 'b', 'b', 'b', [1, 2, 3], [1, 2, 3], [1, 2, 4, 3], 'c', {'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [[2, 5, 25, 1, 1, 0, 4, 4, 2, 3, 2]], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'John', 'bb', 'd', 'f', 'd', 'a', 'a', 'c', 'c', 'c']], [['a', 'b', 2, 3, 'b', 'd', 4, 'e', 'e', 0]], [[0, 0, 1, 1, 1, 'a', 'a', 'b', 'b', 'bb', [1, 2, 3], [1, 2, 3], 'cabb', {'name': 'John', 'age': 25}, 'd', {'name': 'John', 'age': 25}, 'b']], [[False, False, True, False, True]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True, True, True]], [['ae', 1, 3, 'a', 2, 'age', 3, 3, 'f', 4, 'bbe', 'e', 3, 4]], [['a', 'a', 'a', 'a', 'b', 'b', 'b', 'b', 'cc', 'd', 'e', 'd', 'c', 'd', 'd']], [[0, 'a', 2.5, True, 'b', 'name', 3, False, 4.5, 4, 'c', 5]], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'b', 'c', 'd', 'John', 'bb', 'ae', 'd', 'd', 'a', '', 'c', 'd', 'c']], [[3, 2, 5, 3, 3, 2, 1, 0, 4, 4, 5, 4, 5, 2, 3, 4]], [['a', 2.5, True, 'b', 3, False, 4.999025494806807, True, 4, 'age', 5]], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, 4, 'c', True, 5, True, False]], [['a', 1, 'b', 2, 'c', 24, 3, 'd', 4, 'e', 'abb', False, True, 0, 'f', 2]], [['a', 1, 'bb', 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 0.7644455113748416, 'b', 1.5, 'bb', True]], [['a', 'aa', 0, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'abb', False, True, 0, 1.5, 2]], [['a', 1, 'bb', 'b', 2, 'c', 3, 3, 'd', 4, 'e', False, True, 0, 'f', 1.5, 'cc', 'b', 0]], [[True, False, True, False, True, True]], [[5, 'a', 1, 'b', 2, 'c', 3, 3, 'd', 4, 'e', 'e', False, True, 0, 'f', 1.5, 'd']], [[True, False, True, False]], [['a', 1, 'b', 'f', 2, 'c', 3, 'e', 'c', 'a']], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'bbbe', 'c', 'd', 'John', 'bb', 'ae', 'd', 'd', 'a', '', 'c', 'd', 'c']], [[0, 0, 1, 1, 1, 'a', 'a', 'b', 'b', [1, 2, 3], [1, 2, 3], 'c', {'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [['a', 1, 'b', 'f', 2, 3, 'e', 'c', 'a']], [[0, 'a', 2.5, True, 'b', 'bbe', '', False, 4.5, 4, 'c', True, 5, True, 'b']], [[0, 'a', 2.5, True, 'b', 3, False, 4.5, False, 4, 'c', 5, 4, 4, 0]], [['a', 'a', 'a', 'b', 'bb', 'b', 'b', 'bbbe', 'c', 'd', 'John', 'bb', 'ae', 'd', 'd', 'a', '', 'c', 'd', 'c']], [['a', 'a', 'a', 'a', 'b', 'bb', 'b', 'b', 'bbbe', 'c', 'd', 'John', 'ae', 'd', 'd', 'a', '', 'c', 'd', 'c']]]
results = [[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]], [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]], [['a', 'a'], ['b'], ['c'], ['d', 'd']], [[2], [5], [3], [1, 1], [0], [4, 4], [2], [3, 3]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [5]], [['a', 'a', 'a', 'a'], ['b', 'b', 'b', 'b'], ['c'], ['d', 'd', 'd', 'd']], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e']], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5]], [[0, 0], [1, 1, 1], ['a', 'a'], ['b', 'b', 'b'], [[1, 2, 3], [1, 2, 3]], ['c'], [{'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5]], [['ae'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e']], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5], [2]], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b']], [['a'], [1], ['ae'], [2], ['c'], [3], ['d'], [4], ['e', 'e']], [['a', 'a', 'a', 'a'], ['b', 'b', 'b', 'b'], ['c'], ['d'], [''], ['d', 'd']], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['d'], [''], ['d', 'd']], [['ae'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [3]], [[2], [5], [1], [3], [1, 1], [0], [4, 4, 4], [2], [3, 3]], [['a'], [1], ['ae'], [2], ['c'], [3], ['d'], [4], ['e']], [['a'], ['b'], [2], [3, 3], ['b'], ['d'], [4], ['e', 'e']], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5], ['d']], [['ae'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [3]], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['d'], ['John'], ['bb'], ['d', 'd'], ['a', 'a']], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [False], [4], ['c'], [5]], [[2], [5], [1], [3], [1], [0], [4, 4, 4], [2], [3, 3]], [['a'], [1], ['b'], [2], ['ae'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b']], [['ae'], [1], ['b'], [2], ['c'], ['ae'], [3, 3], ['d'], [4], ['e', 'e']], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True]], [['a'], [1], ['b'], [2], ['c'], [3], ['d'], ['bbe'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5]], [['a', 'a', 'a', 'a'], ['b', 'b', 'b'], ['c'], ['d', 'd', 'd', 'd'], ['a']], [['a'], [1], ['bb'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b']], [['a'], [1], ['b'], ['f'], [2], ['c'], [3, 3], ['e', 'e']], [['a'], [1], ['b'], [2], ['age'], [3], ['d'], ['bbe'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5]], [[True], [False], [True]], [[2], [5], [1], [2], [1], [0], [4, 4, 4], [2], [3, 3, 3]], [[0, 0], [1, 1, 1], ['a', 'a'], ['b', 'b', 'b'], [[1, 2, 3], [1, 2, 3]], ['c'], [{'name': 'John', 'age': 25}], ['d'], [{'name': 'John', 'age': 25}], ['b']], [[2], [5], [1], [2], [1], [0], [4, 4, 4], [2], [3, 3], [5], [3]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True], [False], [True]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [False], [4], ['c'], [5], [4]], [[2], [5], [25], [1, 1], [0], [4, 4], [2], [3]], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [False], [1.8236031742951366], [True], [0], ['f'], [1.5]], [['a', 'a', 'a', 'a'], ['b', 'b', 'b'], ['c'], ['d', 'd', 'd', 'd'], ['a'], ['d']], [['a'], [1], ['bb'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b'], [1.5]], [['ae'], [5], ['b'], [2], [3, 3], ['d'], [4], [25], ['e', 'e'], [3], [4]], [[3], [2], [5], [1], [3], [2], [1], [0], [4, 4, 4], [2], [3, 3, 3]], [[0], [3], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [5]], [[0], [3], ['a'], [2.5], [True], [0], ['b'], [3], [False], [4.5], [4], ['c'], [5]], [[0], [3], ['a'], [2.5], [True], [0], ['b'], [3], [False], [4.5], [4], ['c'], [5], [False], [3]], [['ae'], ['b'], [2], ['c'], [3], ['d'], [4], ['e', 'e'], [3]], [['ae'], [1], [3], ['b'], [2], ['age'], [3, 3], ['d'], [4], ['e', 'e'], [3]], [['a'], [4], ['b'], [2], ['ae'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b']], [['a'], [2.5], [True], ['b'], [3], [False], [4.999025494806807], [False], [4], ['c'], [5]], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['d'], ['John'], ['bb'], ['d', 'd'], ['a', 'a'], ['c']], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True, True]], [[True], [False], [True, True]], [[0], ['a'], [2.5], [True], ['b'], [3], [''], [False], [4.5], [4], ['c'], [True], [5], [True]], [[3], [2], [5], [1], [3], [2], [1], [0], [4, 4, 4, 4], [2], [3, 3, 3]], [[2], [5], [3], [1, 1], [0], [4, 4], [2], [3, 3, 3]], [[0], ['a'], [2.5], [True], ['b'], [''], [False], [4.5], [4], ['c'], [True], [5], [True]], [['a'], [1], ['b'], ['f'], [2], ['c'], [3], ['e']], [[0], [3], ['a'], [2.5], [True], ['b'], [3], [False], [4], ['c']], [['ae'], [1], [3], ['a'], [2], ['age'], [3, 3], ['d'], [4], ['bbe'], ['e'], [3]], [[0], ['a'], [2.5], [True], ['b'], [3], [''], [False], [3.576699300614228], [4], ['c'], [True], [5], [True]], [['a'], [4], ['b'], ['ff'], [2], ['ae'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['b']], [[0], ['a'], [2.5], [True], ['bb'], ['b'], [''], [False], [4.5], [4], ['c'], [True], [5], [True]], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [True], [0], ['f'], [1.5]], [['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], ['abb'], [False], [True], [0], ['f'], [1.5], [2]], [[0], [{'name': 'John', 'age': 24}], [0], [1, 1, 1], ['a', 'a'], ['b', 'b', 'b'], [[1, 2, 3], [1, 2, 3]], ['c'], [{'name': 'John', 'age': 25}], [{'name': 'John', 'age': 24}], ['a', 'a']], [['a'], [1], ['bb'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [0.7644455113748416], ['b'], [1.5], ['bb']], [['a'], ['b'], [2], [3], ['b'], ['d'], [4], ['e', 'e'], [4]], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['d'], ['John'], ['bb'], ['ae'], ['d', 'd'], ['a', 'a'], ['c']], [[0], [1, 1, 1], ['a', 'a'], ['b', 'b', 'b'], [[1, 2, 3], [1, 2, 3]], ['c'], [{'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [['ae'], [1], ['b'], [5], [2], ['c'], ['ae'], [3, 3], ['d'], [4], ['e', 'e']], [[True], [False], [True], [False], [True]], [[3], [2], [5], [3, 3], [2], [1], [0], [4, 4, 4, 4], [5], [2], [3], [4], [3]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True], [4]], [['a'], ['b'], [2], [3, 3], ['f'], ['d'], [4], [3], ['e', 'e']], [[0], ['a'], [2.5], ['abb'], [True], ['b'], [3], [''], [False], [4.5], [4], ['c'], [True], [5], [True]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [False], [4], ['c'], [5, 5]], [['a'], [1], ['ae'], [2], ['aa'], ['c'], [3], ['d'], [4], ['e']], [[0, 0], [1, 1, 1], ['a', 'a'], ['b', 'b', 'b'], [[1, 2, 3], [1, 2, 3]], [[1, 2, 4, 3]], ['c'], [{'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [[2], [5], [25], [1, 1], [0], [4, 4], [2], [3], [2]], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['John'], ['bb'], ['d'], ['f'], ['d'], ['a', 'a'], ['c', 'c', 'c']], [['a'], ['b'], [2], [3], ['b'], ['d'], [4], ['e', 'e'], [0]], [[0, 0], [1, 1, 1], ['a', 'a'], ['b', 'b'], ['bb'], [[1, 2, 3], [1, 2, 3]], ['cabb'], [{'name': 'John', 'age': 25}], ['d'], [{'name': 'John', 'age': 25}], ['b']], [[False, False], [True], [False], [True]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True, True, True]], [['ae'], [1], [3], ['a'], [2], ['age'], [3, 3], ['f'], [4], ['bbe'], ['e'], [3], [4]], [['a', 'a', 'a', 'a'], ['b', 'b', 'b', 'b'], ['cc'], ['d'], ['e'], ['d'], ['c'], ['d', 'd']], [[0], ['a'], [2.5], [True], ['b'], ['name'], [3], [False], [4.5], [4], ['c'], [5]], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b', 'b'], ['c'], ['d'], ['John'], ['bb'], ['ae'], ['d', 'd'], ['a'], [''], ['c'], ['d'], ['c']], [[3], [2], [5], [3, 3], [2], [1], [0], [4, 4], [5], [4], [5], [2], [3], [4]], [['a'], [2.5], [True], ['b'], [3], [False], [4.999025494806807], [True], [4], ['age'], [5]], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [4], ['c'], [True], [5], [True], [False]], [['a'], [1], ['b'], [2], ['c'], [24], [3], ['d'], [4], ['e'], ['abb'], [False], [True], [0], ['f'], [2]], [['a'], [1], ['bb'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [0.7644455113748416], ['b'], [1.5], ['bb'], [True]], [['a'], ['aa'], [0], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], ['abb'], [False], [True], [0], [1.5], [2]], [['a'], [1], ['bb'], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e'], [False], [True], [0], ['f'], [1.5], ['cc'], ['b'], [0]], [[True], [False], [True], [False], [True, True]], [[5], ['a'], [1], ['b'], [2], ['c'], [3, 3], ['d'], [4], ['e', 'e'], [False], [True], [0], ['f'], [1.5], ['d']], [[True], [False], [True], [False]], [['a'], [1], ['b'], ['f'], [2], ['c'], [3], ['e'], ['c'], ['a']], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b'], ['bbbe'], ['c'], ['d'], ['John'], ['bb'], ['ae'], ['d', 'd'], ['a'], [''], ['c'], ['d'], ['c']], [[0, 0], [1, 1, 1], ['a', 'a'], ['b', 'b'], [[1, 2, 3], [1, 2, 3]], ['c'], [{'name': 'John', 'age': 25}, {'name': 'John', 'age': 25}]], [['a'], [1], ['b'], ['f'], [2], [3], ['e'], ['c'], ['a']], [[0], ['a'], [2.5], [True], ['b'], ['bbe'], [''], [False], [4.5], [4], ['c'], [True], [5], [True], ['b']], [[0], ['a'], [2.5], [True], ['b'], [3], [False], [4.5], [False], [4], ['c'], [5], [4, 4], [0]], [['a', 'a', 'a'], ['b'], ['bb'], ['b', 'b'], ['bbbe'], ['c'], ['d'], ['John'], ['bb'], ['ae'], ['d', 'd'], ['a'], [''], ['c'], ['d'], ['c']], [['a', 'a', 'a', 'a'], ['b'], ['bb'], ['b', 'b'], ['bbbe'], ['c'], ['d'], ['John'], ['ae'], ['d', 'd'], ['a'], [''], ['c'], ['d'], ['c']]]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "pack_consecutive_duplicates"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ['assert pack_consecutive_duplicates([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4])==[[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]', 'assert pack_consecutive_duplicates([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10])==[[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]', "assert pack_consecutive_duplicates(['a', 'a', 'b', 'c', 'd', 'd'])==[['a', 'a'], ['b'], ['c'], ['d', 'd']]"]:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
