import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[3], [4], [1], [10], [100], [1000], [True], [999], [99], [998], [997], [97], [98], [9], [1001], [8], [101], [1002], [7], [102], [11], [103], [996], [995], [12], [83], [84], [96], [95], [82], [994], [993], [13], [94], [93], [6], [81], [5], [991], [992], [80], [1003], [104], [92], [990], [85], [86], [59], [989], [60], [1004], [62], [14], [15], [63], [58], [87], [28], [17], [27], [79], [64], [61], [105], [78], [91], [77], [25], [90], [26], [2], [24], [88], [16], [18], [89], [65], [66], [23], [76], [39], [57], [106], [54], [22], [38], [67], [75], [56], [36], [37], [55], [40], [74], [988], [41], [42], [43], [29], [21], [44], [987], [53]]
results = [15, 56, 1, 167960, 89651994709013149668717007007410063242083752153874590932000, 2046105521468021692642519982997827217179245642339057975844538099572176010191891863964968026156453752449015750569428595097318163634370154637380666882886375203359653243390929717431080443509007504772912973142253209352126946839844796747697638537600100637918819326569730982083021538057087711176285777909275869648636874856805956580057673173655666887003493944650164153396910927037406301799052584663611016897272893305532116292143271037140718751625839812072682464343153792956281748582435751481498598087586998603921577523657477775758899987954012641033870640665444651660246024318184109046864244732001962029120000, 1, 511781759720485298804609139689305707691853042294501159776528828172605412210075455746149089842027912955293472124481747290826179668886073103358186468789267713102663802835839501376028767490886442162433266690665349449454125741095036744097271345663222370639865284579891048612316021769772299671979640225987483835109361235600575231140843700846046330999651561069589670643511138100670151173774583694603890266697347682000703041527508477706273539496520306711573384607476100500872634392367976249561559927210833170816151476258117588364463288907960151831223013205303648378087634835457676553965782358118366690134560, 22523374248628705616520134499173196541648126577552563686660, 128009380487408873121243407004883475432485398821433390690885119099134237238153352359534494850971115614709071911228400106727791213734591115189167659359832836761763885876404151365505893965047839346133414375137285194697756717562040425655770142443869990646276109361923582700149170133135828636005981180363014207858119138951012625213737025318847700564272900328332962732944290265345167619153212934320069314723825725233671737697751196552301172584083148270491382177936862325487953933799407894890994351225640138003431366595840044648487837444390868466754327481936879563923327324767622204291885975460219848480000, 32018354250757329158411509009770155896048175218191802509352954349323960625991947155000084247455257398405100866092892600112807126095121057780160962583154174241522422193900624299350070292682995849409826951617485965860178950372410221464087078714954179610766129691162770187014800001033064808551404883346920216390000611938821358946152384575830424333659173370731592478415656359625160844038818876404837745082363874066406685994086741156418507390034346368640596512165094270438867354238806349926699274941811255185014553272850581360723409615754224781767221268349123775447216685363339716611501526164184346072000, 1421819147544568817390637151125732177886156630237276244700, 5658849090820933062654394659588199920734031699226147878000, 43758, 8180342126958021793182954428073115596481529343015519889570031253455425390399939312202983874968868308601059875062507076663719319516580946325006213866443697442524129353623304620647049020816338405324649616999813015140757737818674586288293648080741595165373319421034925602481585276945877729688246685505104742878421774401311752167289619609791366128412944859537372154527277412708287145528551149967659741429649705716315637655248031997333127345759099340162465167189224332225998600184366053199986374187694302975356334733459983318009685498546657233539888078090870863712823247415862452305345566990907508874829120, 11440, 356867675409348225769534109658319939975988676956040798139320, 32705073054278745157233491602852404705627390118571770226755079707675294777177001660806316026875952578970737688253326091468939149754921168084090229346397768590991426833382159442683639923531137013568691984419024087110479997267950009567945676377335258851766865871782498446188221629501183320668741482423574928731188595560130984609136168506605917647500158487097475083977185189625944445980092348911293904515734588982064361695948581242963558040568777046088723968633114383370512929864997963091129912785016762374929190347165471177168488248931790736995719359517544008726704072603608628562947292038277407053236480, 3003, 1420609840820141182886469917251787499210385762770697061669280, 646646, 5655387780715927804797852998260085415879957650999862077139300, 8008596857327323476222522874137619361325082762659377336403820454555541047105441615274152548625431109201628342554825537237133172169684943541598764707407700882242115166401052570292001109069617114836774062408850734328611715251569746725644638113863460468343922646527974004314551109280393786532342855280821257161698776276668425085428649090133433021355055533860530104182338723827852569313897103678677768708491341997140638456163818450688052037133291637380707616543610013575698913361310077316228286688052094603918616378397525913719571898167313145375633191221727356123749311905773161186913829551728077728000, 2003152794861405642223561758078933128476967129391383264946434645721488427805724319673517888864513060225495992064573022204915761435977463159372572805339653538992083824196166929273654003309495193777319832196822463438635947785437572060729196464039044358373775469581855329880571865229070435974657569903270515367159903185847162560619550357923082979502019987388694348287283425292855794485810049667732589505524367341614945582957482960561307999858999610611260377074725140546439136137246125725619253462581616931943324837929321925900115055036935070747532762942735750431434722730753643023837268365969535860000, 2496144, 5714918614020756160754708318877497712867772106300, 22726825887309189914405966916290159579336387556960, 357258547622971621014131571972407679332112642948354652800, 89772510807855679745997557693219261699536922032315884750, 1437179971280575700448281522469083762184491210960, 501039471510359302681517063947272231339523384976308092876481202820480193640382509293691907098388038214371617779126108606228609563628133626123243674135783279213336364064158390743870188289986804238436347031999353869238630449969820657296376806130650955090848583161485340505868528237351975893892384493082680548508534626795402671202874534450139663551166550700840737995853951972566266495883037260775291538794337765502978665530240218323075506050212407056853509264024416336167478749994557598293244955304148374206441516114039026294705176775755753751602501218919893228114107474726989568514131183001640624000, 125322780729099775711372591937417944782825282767330345066173109423712164310339979628650838961791844508707165330280339489568281417290690040415284627638692910426208178732214812680466235127700554642835233884373549196586967764472069395014228718472206595489693718390858023937969996956320727460465349245098914138010152006651331157109221038522388417692054906925626526791785833125885284307065289755632464939494203143910958333239793793994677655166105241313613502106165013279147769067032003980761687963567498154227089118347157567788484563479425581206910455509057241462271293128370596284887700537243852140000, 9657700, 22559374478699238485878083002606811962590397783893582400, 5669361517786658664886018413017157346953184788391734000, 792, 361445494049053959079522545097996787863472033940, 210, 7840555708936708271160685548720884202122396547676016018322878353299351941284141798049225947167352191402743727048550559831438377545907428956662981920251927669001250636257250234686522264022652378538955077779367833784573086872183702900113563275621180266109840195553150133324257281464968470528537539824126343904514079674711137974741640269788974571085298988932126648448576252299825776519298923402115851139504604231818387654711892137935245743225009074421006432744211883546519884417812339982116489865622166679623845786435390414259103716201191644735412964925981163020192186562733445420442080417440278000, 31346447117826644354473130942975409635005569064600960398307006019728155576157058155925712343228017963051608858886834591006015599107264791315381620084642336897309306765124879601530200120033909026778988613295275857500281920603457218873421304139577132894853777863652309944926180888077028030200556716266077679260271361965631405938606311331188357415869615485780865425735015938296775874550852144599572521164113535719079562624627351404634434117215404807660161819076051000296052060394746464856540086169890599430094482781987267396384166964662114777729152133903286438162777743104393151435602704916335232000, 90908766235786901754530630160373396533409115200, 130755207688706989790088965725342598963601215774227657240415318006080732809927173531237154425785766665073912040744730797042187863803056820292933480785532736524983149703250915244468115841663226338839935887282056851517049430433568099838733438262850525204145382086708418049878741561202937105101846411312923029046192939818285365551252021672416321695031314303525079037153539681822845683200641376700474969164678599895360995809134790395937924296734060109542101517643443236383511979333084585302917315884884582204949117156135875697516296880194919223225752812661874984512116783498632229901780996768129954722356800, 22514875292325935049780523226360262382443592845256593767296320, 1424836919669253825455806080667607577345281663760875200, 1961126399746268271826928490612332282114080536423383854813088715452761770242207626597016718919063403069016035653501537512335655381086203858390222065281377201775277911311729928386508303416097336379647265262567948029782820028269104154488714488376725388603731376239980542432392947680338655047539452016782542076504081245836535478120415917959860895146538541739477340208361310822799669158741924848816006116401648588937031503608054273118196565532604371144281878009973559764627291277490637048335820559500475876203597768595417367625026189162040976171142087111746144523037051428410785937268775449606720000, 90385064748393276057708115933695498991463789384200, 359486886325861127168263841222698041424872613031520, 23950754712527042158107963158659608, 490528841539426040840262347252376278542812720348513455096302447651486149583918378484212894277758668617590648151030569314749991961899747172432867904910706997739585880431070480214394679914305659752746235737000521459170306431389825672773779886113163003620114361942167682294763168733456912600854009876990356497424873679943227776902512114774970958568052245093767386257949559357117188290896280082890481055802884678102040016040840539051166372079036961722872873340708008827984606947131061979174485990410894418105070403224411871772786108424193220406276047089422594949210164063049387989631328328607984000, 95031057875767202561206366742333760, 522760880817368527696003310322972667082191099575126179102175260112511910780141034858214889278993351947323313307118988127165420607477757728766395670541232936046514677222545865375475758849213489170498372208902027159117070836659557369844383987611127152078210465073269525168199006662773137203353448848469629252288690281664776662204447867792692997371062056017824204921707361017413679541134649766144362288588888041923879062639522742066231164654889936507711495834673158906808718871627082465546181104830557501448439179267955658070593927014787295213936582766312867618619726210462506817764668101874855763861214720, 1496663740068828863194110429868945344, 37442160, 145422675, 5940638585202634726639929251621947875, 6037130696769093633942902491100640, 1429872390615892131345015611586371094472980364359780, 7384942649010080, 2203961430, 1877405874732108, 22866556412845927056888423836329770613886986170, 23582666872052266206656578733667004800, 377109805473676194679711931680196496, 89638776903137272254614220283468062043309986391356304467220200, 5752129001699531759855831844662491680668176800, 358113413256144426373024675121464805389436882882165800, 1447071989964361112291274818489740979880253080, 121548660036300, 90012114072031930373645932548288767792621498095572000, 477551179875952, 4, 30957699535776, 5687726931547136464603704098780863968715975102968000, 565722720, 8597496600, 22625950089056070890631856229316906590702716110367400, 93627207254809778476711843125851247750, 371756984580980640509598436586043576600, 7890371113950, 364071078707611097260957351838009699037863520, 26536589497469056215210, 1521954312836166558541977592021848, 356895573514119845348767539093911290727311287161384086464414240, 24405824773509487458170913508896, 2012616400080, 6715886785906254653200, 1476259576471086670045023025141815646650, 91604674082278410887157054150597159809326500, 383737587959312915862780874001472, 430552741890976325712, 1700179760011004467468, 96767803913485037904586393178460, 104885081691059684352800, 23050768995021645764177685572391875918015760, 122694114389939153415613582256233409581342153170788634693002734197792212217810749903715354522141459173886388301024476233547081154657065020306844371329761603390723282707465135741334682600609908773277971725161641498477092255240374592713446695185995622331459473455065163793676253303682151453839304719359031157927188308578498525035861126336002193576632605082594363963800496150212648749571403157206979692730791759773586175418185510534116774621480604556130693795640082791032235661351199651162828605029810476761046131319543235585982363502797815102134283179492891347493507406292144131838231386111680000, 414670662257153823494820, 1639866056299986646288080, 6486699605818670121410100, 29065024282889672, 513791607420, 25665205262091854495873760, 30689028058970526067897629535270447683329081489928030091511240703130088507899974079655208658152700861573048925159364347881757915120794193644591806785975370475742017463207384819851806764159062722204140612339071443972716718420310812293107671136919829029236366729064642592387259501003486487624932205880511134011305124045698069421432016462103261734350146318643701691876212707824790034426504943392992563470843350781701360639377302006176485094382191813979163591902192726870952599594717388685757444524064543693168106842785038849640645276664676786563487312478790918520051965382112552986462025299342400, 6156367187156469015279353831640]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "binomial_Coeff"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ['assert sum_Of_product(3) == 15', 'assert sum_Of_product(4) == 56', 'assert sum_Of_product(1) == 1']:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
