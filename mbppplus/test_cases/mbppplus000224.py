import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[[(3, 4), (5, 6), (9, 10), (4, 5)], [(5, 4), (3, 4), (6, 5), (9, 11)]], [[(4, 1), (7, 4), (11, 13), (17, 14)], [(1, 4), (7, 4), (16, 12), (10, 13)]], [[(2, 1), (3, 2), (1, 3), (1, 4)], [(11, 2), (2, 3), (6, 2), (1, 3)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9)], [(1, 2, 3), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(2, 3, 1), (6, 5, 4), (11, 12, 10)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9)], [(4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9)], [(4, 5, 6), (7, 8, 9), (1, 2, 3), (10, 11, 12)]], [[(), (), ()], [()]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(4, 5, 6), (7, 8, 9)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)], [(1, 3), (3, 5), (5, 7), (7, 9)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(2, 3, 1), (6, 5, 4), (11, 12, 10)], [(2, 3, 1), (6, 5, 4), (11, 12, 10)]], [[(1, 2, 3), (7, 8, 9), (10, 11, 12)], [(4, 5, 6), (7, 8, 9)]], [[(4, 5, 6)], [(4, 5, 6)]], [[(1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3)], [(1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (6, 7)], [(1, 3), (3,), (5, 7), (6, 7, 9)]], [[(1, 2, 3), (4, 5, 6), (7, 1, 9)], [(4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6, 4), (7, 8, 9)], [(4, 5, 6), (1, 2, 3)]], [[(1, 2, 3), (4, 5, 6, 4), (7, 8, 9)], [(4, 5, 6), (1, 2)]], [[(1, 2), (1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(1, 2), (1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (7, 8, 9), (1, 2, 3, 3), (10, 11, 12)], [(1, 2, 3), (7, 8, 9), (1, 2, 3, 3), (10, 11, 12)]], [[(7, 9, 7), (7, 8, 9, 8), (1, 2, 3), (4, 5, 6), (7, 8, 9, 7), (7, 9, 7)], [(7, 9, 7), (7, 8, 9, 8), (1, 2, 3), (4, 5, 6), (7, 8, 9, 7), (7, 9, 7)]], [[(4, 5, 6), (7, 8, 9), (4, 5, 6)], [(4, 5, 6), (7, 8, 9), (4, 5, 6)]], [[(1, 2, 3), (4, 5, 6, 4)], [(1, 2, 3), (4, 5, 6, 4)]], [[(2, 1, 3, 1), (11, 12, 10), (2, 3, 1)], [(2, 1, 3, 1), (11, 12, 10), (2, 3, 1)]], [[(1, 2, 3, 1), (4, 5, 6, 4), (7, 8, 9), (1, 2, 3, 1)], [(1, 2, 3, 1), (4, 5, 6, 4), (7, 8, 9), (1, 2, 3, 1)]], [[], []], [[(1, 2, 3, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9)], [(1, 2, 3, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9)]], [[(1, 2, 3), (4, 5, 6), (7, 7, 9, 9), (10, 11, 12)], [(1, 2, 3), (4, 5, 6), (7, 7, 9, 9), (10, 11, 12)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)], [(1, 11), (1, 3), (3, 5), (5, 7), (7, 9)]], [[(1, 2, 3), (4, 5, 6, 4)], [(4, 5, 6), (1, 2, 3)]], [[(2, 1, 3, 1), (2, 3, 1)], [(2, 1, 3, 1), (2, 3, 1)]], [[(1, 2, 3), (4, 5, 6), (5, 6), (7, 8, 9), (10, 11, 12)], [(1, 2, 3), (4, 5, 6), (5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 8, 9)], [(4, 5, 6), (1, 2, 3), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 8, 9), (7, 8, 8, 9)], [(4, 5, 6), (1, 2, 3), (10, 11, 12)]], [[(4, 5, 6), (1, 2)], [(4, 5, 6), (1, 2)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (7, 7)], [(1, 11), (1, 3), (3, 5), (5, 7), (7, 9), (1, 3)]], [[(1, 2, 3), (4, 5, 6, 4)], []], [[(1, 2, 3), (4, 5, 6, 5), (10, 11, 12), (1, 2, 3)], [(1, 2, 3), (4, 5, 6, 5), (10, 11, 12), (1, 2, 3)]], [[(1, 2, 3), (8, 10, 11, 12)], [(1, 2, 3), (8, 10, 11, 12)]], [[(1, 2, 3), (4, 5, 6, 5), (10, 11, 12), (1, 2, 3), (1, 2, 3)], [(1, 2, 3), (4, 5, 6, 5), (10, 11, 12), (1, 2, 3), (1, 2, 3)]], [[(1, 2), (2, 3), (4, 5), (5, 6), (6, 7)], [(1, 2), (2, 3), (4, 5), (5, 6), (6, 7)]], [[(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (3, 4)], [(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (3, 4)]], [[(1, 2), (4, 5, 6)], [(1, 2), (4, 5, 6)]], [[(1, 1), (4, 5, 6), (1, 2)], [(1, 1), (4, 5, 6), (1, 2)]], [[(2, 1, 3, 1), (11, 12, 10), (2, 3, 1), (2, 1, 3, 1), (2, 1, 3, 1)], [(2, 1, 3, 1), (11, 12, 10), (2, 3, 1), (2, 1, 3, 1), (2, 1, 3, 1)]], [[(2,), (1, 2), (2, 3), (3, 4), (4, 5), (6, 7)], [(2,), (1, 2), (2, 3), (3, 4), (4, 5), (6, 7)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 8, 9), (7, 8, 8, 9)], [(1, 2, 3), (4, 5, 6), (7, 8, 8, 9), (7, 8, 8, 9)]], [[(3,), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (7, 7)], [(1, 11), (1, 3), (3, 5), (5, 7), (7, 9), (1, 3)]], [[(1, 2, 3), (1, 2, 3, 3, 1)], [(1, 2, 3), (1, 2, 3, 3, 1)]], [[(1, 2), (4, 7), (5, 6), (6, 7)], [(1, 2), (4, 7), (5, 6), (6, 7)]], [[(10, 11, 2), (1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(10, 11, 2), (1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2), (3, 4), (4, 5), (5, 6), (6, 7)], [(1, 2), (3, 4), (4, 5), (5, 6), (6, 7)]], [[(1, 2, 3), (11, 12), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(1, 2, 3), (11, 12), (4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6, 6, 6), (4, 5, 6), (4, 5, 6, 6), (7, 1, 9)], [(1, 2, 3), (4, 5, 6, 6, 6), (4, 5, 6), (4, 5, 6, 6), (7, 1, 9)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(7, 8, 9, 8), (4, 5, 6), (7, 8, 9)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12), (7, 8, 9)], [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12), (7, 8, 9)]], [[(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (3, 4), (5, 6)], [(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (3, 4), (5, 6)]], [[(4, 5, 6, 6), (4, 5, 6), (4, 5, 6)], [(4, 5, 6, 6), (4, 5, 6), (4, 5, 6)]], [[(1, 2, 3), (4, 5, 6, 4), (4, 5, 6, 4)], [(1, 2, 3), (4, 5, 6, 4), (4, 5, 6, 4)]], [[(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1), (8, 7, 6)], [(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1), (8, 7, 6)]], [[(4, 5, 6), (10, 11, 11), (7, 8, 9), (10, 11, 12), (10, 11, 12)], [(4, 5, 6), (10, 11, 11), (7, 8, 9), (10, 11, 12), (10, 11, 12)]], [[(4, 5, 6), (7, 8, 9), (10, 11, 12)], [(7, 8, 9)]], [[(4, 5, 6), (7, 8, 9), (10, 11, 12, 11)], [(4, 5, 6), (7, 8, 9), (10, 11, 12, 11)]], [[(4, 5, 6), (7, 7, 9, 9), (10, 11, 12)], [(4, 5, 6), (7, 7, 9, 9), (10, 11, 12)]], [[(1, 1), (1, 2, 2), (4, 5, 6), (1, 2)], [(1, 1), (1, 2, 2), (4, 5, 6), (1, 2)]], [[(1, 2), (3, 4), (4, 5), (5, 6), (1, 2)], [(1, 2), (3, 4), (4, 5), (5, 6), (1, 2)]], [[(1, 2, 3), (4, 5, 6, 6, 6), (4, 5, 6), (7, 1, 9)], [(1, 2, 3), (4, 5, 6, 6, 6), (4, 5, 6), (7, 1, 9)]], [[(1, 2), (4,), (3, 4), (4, 5), (5, 6), (1, 2)], [(1, 2), (4,), (3, 4), (4, 5), (5, 6), (1, 2)]], [[(4, 5, 6), (7, 8, 9), (1, 2, 3), (10, 11, 12)], [(4, 5, 6), (7, 8, 9), (1, 2, 3), (10, 11, 12)]], [[(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1), (8, 7, 6), (3, 2, 1)], [(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1), (8, 7, 6), (3, 2, 1)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (7, 7)], [(1, 11), (1, 3), (3, 5), (5, 7), (7, 9, 7), (1, 3)]], [[(4, 5, 6), (7, 7, 9, 9), (10, 11), (10, 11, 12), (10, 11, 12)], [(4, 5, 6), (7, 7, 9, 9), (10, 11), (10, 11, 12), (10, 11, 12)]], [[(1, 2, 3), (4, 5, 6), (6, 8, 9), (1, 2, 3)], [(1, 2, 3), (4, 5, 6), (6, 8, 9), (1, 2, 3)]], [[(1, 2, 3), (4, 5, 6, 4), (1, 2, 3)], [(1, 2, 3), (4, 5, 6, 4), (1, 2, 3)]], [[(1, 2, 3), (1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3)], [(1, 2, 3), (1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6, 6), (6, 7)], [(1, 3), (3, 5), (5, 7), (7, 9)]], [[(1, 2, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9)], [(1, 2, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9)]], [[(4, 5, 6), (4, 5), (7, 8, 9), (1, 2, 3), (10, 11, 12)], [(4, 5, 6), (4, 5), (7, 8, 9), (1, 2, 3), (10, 11, 12)]], [[(2, 1, 3, 1), (11, 12, 10), (2, 3, 1), (11, 12), (2, 1, 3, 1), (2, 1, 3, 1)], [(2, 1, 3, 1), (11, 12, 10), (2, 3, 1), (11, 12), (2, 1, 3, 1), (2, 1, 3, 1)]], [[(1, 2), (6, 4), (4,), (5, 6), (1, 2, 1), (2, 2)], [(1, 2), (6, 4), (4,), (5, 6), (1, 2, 1), (2, 2)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)], [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)]], [[(1, 11), (1, 3), (3, 5), (5, 7), (1, 3)], [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (7, 7, 7)]], [[(1, 2), (3, 4), (4, 5), (5, 6), (6, 7), (1, 3, 2), (1, 2)], [(1, 2), (3, 4), (4, 5), (5, 6), (6, 7), (1, 3, 2), (1, 2)]], [[(1, 2), (4, 7), (5, 6)], [(1, 2), (4, 7), (5, 6)]], [[(1, 2, 3), (4, 5, 6), (4, 5, 6)], [(1, 2, 3), (7, 8, 9), (10, 11, 12)]], [[(1, 11), (1, 4, 3), (3, 5), (1,), (5, 7), (1, 3)], [(1, 11), (1, 4, 3), (3, 5), (1,), (5, 7), (1, 3)]], [[(7, 9, 8, 9), (10, 11, 12)], [(7, 9, 8, 9), (10, 11, 12)]], [[(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (5, 6)], [(1, 2), (2, 2), (3, 4), (5, 6), (6, 7), (5, 6)]], [[(1, 4, 3), (3, 5), (1,), (5, 7), (1, 3)], [(1, 4, 3), (3, 5), (1,), (5, 7), (1, 3)]], [[(4, 5, 6, 5), (10, 11, 12)], [(4, 5, 6, 5), (10, 11, 12)]], [[(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7, 6)], [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7, 6)]], [[(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12), (7, 8, 9), (4, 5, 6)], [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12), (7, 8, 9), (4, 5, 6)]], [[(1, 2, 3), (4, 5, 6, 4, 5)], [(1, 2, 3), (4, 5, 6, 4, 5)]], [[(4, 5, 5), (4, 5, 5)], [(4, 5, 5), (4, 5, 5)]], [[(7, 7, 8, 9), (7, 8, 9)], [(7, 7, 8, 9), (7, 8, 9)]], [[(1,), (1, 2), (4, 5, 6), (1, 2)], [(1,), (1, 2), (4, 5, 6), (1, 2)]], [[(4, 5, 6), (10, 11, 12, 11), (7, 8, 9), (10, 11, 12)], [(12, 10, 9), (8, 7, 6), (6, 5, 4)]], [[(1, 4, 3), (3, 5), (3,), (5, 7), (5, 12, 7)], [(1, 4, 3), (3, 5), (3,), (5, 7), (5, 12, 7)]], [[(1, 2, 3, 1), (1, 2, 3), (10, 11, 12), (1, 2, 3), (1, 2, 3)], [(1, 2, 3, 1), (1, 2, 3), (10, 11, 12), (1, 2, 3), (1, 2, 3)]], [[(4, 5, 6), (6, 5, 6), (7, 7, 9, 9), (10, 11, 12), (7, 7, 9, 9)], [(4, 5, 6), (6, 5, 6), (7, 7, 9, 9), (10, 11, 12), (7, 7, 9, 9)]], [[(1, 2, 3), (1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3), (1, 2, 3)], [(1, 2, 3), (1, 2, 3), (4, 5, 6), (10, 11, 12), (1, 2, 3), (1, 2, 3)]], [[(4, 5, 6), (7, 8, 9)], [(4, 5, 6), (7, 8, 9)]], [[(1, 11), (1, 3), (3, 5), (5, 7), (7, 9), (1, 3)], [(1, 11), (1, 3), (3, 5), (5, 7), (7, 9), (1, 3)]], [[(1, 11), (1, 3), (3, 5), (5, 7), (8, 1, 3), (7, 9), (1, 3)], [(1, 11), (1, 3), (3, 5), (5, 7), (8, 1, 3), (7, 9), (1, 3)]], [[(1, 2), (6, 4), (4,), (5, 6), (1, 2, 1), (2, 2), (5, 6)], [(1, 2), (6, 4), (4,), (5, 6), (1, 2, 1), (2, 2), (5, 6)]], [[(3, 5), (1,), (5, 7), (1, 3), (3, 5)], [(3, 5), (1,), (5, 7), (1, 3), (3, 5)]], [[(1, 2, 3, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9), (7, 8, 9)], [(1, 2, 3, 3), (7, 8, 9), (10, 11, 12), (7, 8, 9), (7, 8, 9)]], [[(4, 5, 6), (7, 8, 9), (10, 11, 12)], [(4, 5, 6), (7, 8, 9), (10, 11, 12)]], [[(1, 2, 3), (7, 8, 8), (4, 5, 6), (7, 8, 9), (10, 11, 12)], [(12, 10, 9), (8, 7, 6), (6, 5, 4), (3, 2, 1)]]]
results = [{(4, 5), (5, 6), (3, 4)}, {(4, 7), (1, 4)}, {(2, 3), (1, 3)}, {(7, 8, 9), (1, 2, 3)}, {(1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(7, 8, 9), (4, 5, 6)}, {(7, 8, 9), (1, 2, 3), (4, 5, 6)}, {()}, {(1, 2, 3), (4, 5, 6)}, {(7, 8, 9), (4, 5, 6)}, set(), {(7, 8, 9), (1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(7, 8, 9)}, {(4, 5, 6)}, {(1, 2, 3), (10, 11, 12), (4, 5, 6)}, set(), {(4, 5, 6)}, {(1, 2, 3)}, set(), {(1, 2), (1, 2, 3), (10, 11, 12), (4, 5, 6), (7, 8, 9)}, {(7, 8, 9), (1, 2, 3), (10, 11, 12), (1, 2, 3, 3)}, {(1, 2, 3), (7, 8, 8, 9), (7, 7, 9), (4, 5, 6), (7, 7, 8, 9)}, {(7, 8, 9), (4, 5, 6)}, {(1, 2, 3), (4, 4, 5, 6)}, {(1, 1, 2, 3), (1, 2, 3), (10, 11, 12)}, {(7, 8, 9), (1, 1, 2, 3), (4, 4, 5, 6)}, set(), {(7, 8, 9), (10, 11, 12), (1, 2, 3, 3)}, {(7, 7, 9, 9), (1, 2, 3), (10, 11, 12), (4, 5, 6)}, set(), {(1, 2, 3)}, {(1, 1, 2, 3), (1, 2, 3)}, {(1, 2, 3), (10, 11, 12), (5, 6), (4, 5, 6), (7, 8, 9)}, {(1, 2, 3), (4, 5, 6)}, {(1, 2, 3), (4, 5, 6)}, {(1, 2), (4, 5, 6)}, set(), set(), {(10, 11, 12), (1, 2, 3), (4, 5, 5, 6)}, {(8, 10, 11, 12), (1, 2, 3)}, {(10, 11, 12), (1, 2, 3), (4, 5, 5, 6)}, {(1, 2), (2, 3), (6, 7), (4, 5), (5, 6)}, {(1, 2), (3, 4), (6, 7), (5, 6), (2, 2)}, {(1, 2), (4, 5, 6)}, {(1, 1), (1, 2), (4, 5, 6)}, {(1, 1, 2, 3), (1, 2, 3), (10, 11, 12)}, {(1, 2), (2,), (3, 4), (2, 3), (6, 7), (4, 5)}, {(1, 2, 3), (4, 5, 6), (7, 8, 8, 9)}, set(), {(1, 2, 3), (1, 1, 2, 3, 3)}, {(6, 7), (1, 2), (4, 7), (5, 6)}, {(1, 2, 3), (10, 11, 12), (2, 10, 11), (4, 5, 6), (7, 8, 9)}, {(1, 2), (3, 4), (6, 7), (4, 5), (5, 6)}, {(1, 2, 3), (10, 11, 12), (11, 12), (4, 5, 6), (7, 8, 9)}, {(4, 5, 6, 6, 6), (4, 5, 6, 6), (1, 2, 3), (4, 5, 6), (1, 7, 9)}, {(7, 8, 9), (4, 5, 6)}, {(7, 8, 9), (1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(1, 2), (3, 4), (6, 7), (5, 6), (2, 2)}, {(4, 5, 6, 6), (4, 5, 6)}, {(1, 2, 3), (4, 4, 5, 6)}, {(1, 2, 3), (9, 10, 12), (4, 5, 6), (6, 7, 8)}, {(7, 8, 9), (10, 11, 11), (10, 11, 12), (4, 5, 6)}, {(7, 8, 9)}, {(7, 8, 9), (4, 5, 6), (10, 11, 11, 12)}, {(7, 7, 9, 9), (10, 11, 12), (4, 5, 6)}, {(1, 1), (1, 2), (4, 5, 6), (1, 2, 2)}, {(4, 5), (1, 2), (3, 4), (5, 6)}, {(4, 5, 6, 6, 6), (1, 7, 9), (1, 2, 3), (4, 5, 6)}, {(1, 2), (3, 4), (4,), (4, 5), (5, 6)}, {(7, 8, 9), (1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(1, 2, 3), (9, 10, 12), (4, 5, 6), (6, 7, 8)}, set(), {(7, 7, 9, 9), (10, 11), (10, 11, 12), (4, 5, 6)}, {(6, 8, 9), (1, 2, 3), (4, 5, 6)}, {(1, 2, 3), (4, 4, 5, 6)}, {(1, 2, 3), (10, 11, 12), (4, 5, 6)}, set(), {(7, 8, 9), (1, 2, 3), (10, 11, 12)}, {(1, 2, 3), (10, 11, 12), (4, 5), (4, 5, 6), (7, 8, 9)}, {(11, 12), (1, 1, 2, 3), (1, 2, 3), (10, 11, 12)}, {(1, 2), (4, 6), (4,), (1, 1, 2), (5, 6), (2, 2)}, {(1, 2), (3, 4), (2, 3), (6, 7), (4, 5), (5, 6)}, set(), {(1, 2), (3, 4), (1, 2, 3), (6, 7), (4, 5), (5, 6)}, {(1, 2), (4, 7), (5, 6)}, {(1, 2, 3)}, {(1, 11), (5, 7), (1, 3, 4), (1,), (1, 3), (3, 5)}, {(7, 8, 9, 9), (10, 11, 12)}, {(1, 2), (3, 4), (6, 7), (5, 6), (2, 2)}, {(5, 7), (1, 3, 4), (1,), (1, 3), (3, 5)}, {(10, 11, 12), (4, 5, 5, 6)}, {(1, 2), (3, 4), (2, 3), (4, 5), (6, 6, 7), (5, 6)}, {(7, 8, 9), (1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(4, 4, 5, 5, 6), (1, 2, 3)}, {(4, 5, 5)}, {(7, 8, 9), (7, 7, 8, 9)}, {(1,), (1, 2), (4, 5, 6)}, {(4, 5, 6)}, {(5, 7, 12), (5, 7), (1, 3, 4), (3,), (3, 5)}, {(1, 1, 2, 3), (1, 2, 3), (10, 11, 12)}, {(5, 6, 6), (7, 7, 9, 9), (10, 11, 12), (4, 5, 6)}, {(1, 2, 3), (10, 11, 12), (4, 5, 6)}, {(7, 8, 9), (4, 5, 6)}, {(1, 11), (5, 7), (7, 9), (1, 3), (3, 5)}, {(1, 3, 8), (1, 11), (5, 7), (7, 9), (1, 3), (3, 5)}, {(1, 2), (4, 6), (4,), (1, 1, 2), (5, 6), (2, 2)}, {(1,), (5, 7), (1, 3), (3, 5)}, {(7, 8, 9), (10, 11, 12), (1, 2, 3, 3)}, {(7, 8, 9), (10, 11, 12), (4, 5, 6)}, {(1, 2, 3), (4, 5, 6)}]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "tuple_intersection"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ['assert tuple_intersection([(3, 4), (5, 6), (9, 10), (4, 5)] , [(5, 4), (3, 4), (6, 5), (9, 11)]) == {(4, 5), (3, 4), (5, 6)}', 'assert tuple_intersection([(4, 1), (7, 4), (11, 13), (17, 14)] , [(1, 4), (7, 4), (16, 12), (10, 13)]) == {(4, 7), (1, 4)}', 'assert tuple_intersection([(2, 1), (3, 2), (1, 3), (1, 4)] , [(11, 2), (2, 3), (6, 2), (1, 3)]) == {(1, 3), (2, 3)}']:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
