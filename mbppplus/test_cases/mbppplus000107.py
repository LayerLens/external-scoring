import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[[(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)]], [[(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)]], [[(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)]], [[(2, 2), (1, 3), (2, 2), (3, 1), (1, 3)]], [[(1,), (2, 3), (4, 5, 6), (7, 8), (9,), (1,), (2, 3)]], [[(1, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9)]], [[]], [[(1, 2), (2, 1)]], [[(1, 2), (2, 1), (1, 2)]], [[(1, 2), (2, 1), (1, 2), (2, 1)]], [[(1, 2), (2, 1), (1, 2), (2, 1), (1, 3)]], [[(1, 2, 3), (2, 1, 3), (1, 2, 3)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (1, 2)]], [[(1, 2), (2, 1), (3, 4), (4, 3), (1, 2), (2, 1)]], [[(1, 2), (1,), (2, 1), (8, 1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1, 2), (1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1,), (1, 2), (1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2), (1, 2, 3, 4)]], [[(2, 1), (1, 2), (2, 1), (1, 2)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1, 1), (1, 2), (1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2, 3, 4)]], [[(1, 2), (2, 4, 1)]], [[(1, 2), (2,), (2, 1), (8, 1, 2)]], [[(5, 5), (3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2)]], [[(1, 2, 3), (2, 1, 3, 3), (2, 1, 3), (1, 2, 3)]], [[(1, 2), (2, 1), (1, 2), (2, 1), (1, 3), (1, 2)]], [[(1, 2), (2,), (0, 2), (2, 1), (8, 1, 2)]], [[(5, 5), (3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (6, 7, 8, 9), (3, 2)]], [[(1, 2), (2, 1), (3, 4), (4, 3), (1,), (2, 1), (2, 1)]], [[(1, 2)]], [[(2, 2), (1, 3), (2, 2), (3, 1), (1, 3), (1, 3), (2, 2)]], [[(1, 2), (2,), (0, 2), (2, 1), (8, 1, 7, 2), (2,)]], [[(1, 2), (2, 1), (1, 3, 2), (1,), (0, 2), (1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1,), (0, 2), (1, 2), (1,)]], [[(1, 2), (2, 8, 1)]], [[(1, 2), (2, 1), (2, 1, 1), (1, 3), (2, 1)]], [[(1, 2), (2, 8, 1, 8)]], [[(1, 2), (1, 2, 3), (2, 1, 3), (1, 2, 3)]], [[(2, 1), (1,), (1, 2), (2, 1), (1, 2)]], [[(2, 2), (2, 1), (1, 3, 2), (1,), (1, 2, 2), (1, 2), (1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2), (1, 2, 3, 4), (1,)]], [[(1, 2), (2, 1, 3), (1, 2, 3)]], [[(1, 2), (2,), (0, 2), (2, 1), (8, 1, 2), (8, 1, 2)]], [[(1, 1), (2, 1), (2, 1)]], [[(1,), (2,), (0, 2), (2, 1), (8, 1, 2)]], [[(1, 2), (2, 1), (1, 2), (2, 1), (1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1,), (0, 2), (1, 2), (1, 3, 2)]], [[(2, 8, 1, 8)]], [[(1, 2), (2, 1), (2,), (2, 1)]], [[(2, 1), (1, 2), (2, 1), (1, 3), (1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (False, False, True), (1, 2, 3, 4)]], [[(1, 2), (2,), (0, 2)]], [[(1, 2), (2, 1), (3, 4), (4, 3), (1,), (4,), (2, 1), (2, 1)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2), (1, 2, 3, 4), (1,)]], [[(1, 2), (1,), (2, 1), (2, 1), (4, 3), (1,)]], [[(1,), (2,), (0, 2), (0, 2, 2), (2, 1), (8, 1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (1, 3, 2), (1, 2), (1, 2), (1, 2)]], [[(0,), (2, 3, 4), (1, 2, 3, 4), (5, 3, 4, 5), (1, 2)]], [[(1, 2), (2,), (2, 1), (8, 1, 7, 2), (2, 2)]], [[(1, 2), (2,), (2, 1), (8, 1, 2), (1, 2)]], [[(1, 7, 2, 3, 6), (0,), (2, 3, 4), (1, 2, 3, 4), (5, 3, 4, 5), (1, 2), (5, 3, 4, 5)]], [[(), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (), (1, 2), (1, 2, 3, 4), (1, 2, 3, 4)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (1, 2, 3), (), (1, 2)]], [[(1, 1), (2,), (0, 2), (2, 1), (8, 1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (False, False, True), (1, 2, 3, 4), (3, 4, 5)]], [[(2, 8, 1)]], [[(1, 2), (1, 3, 2), (1, 2), (1, 2)]], [[(3, 2), (2, 3, 4), (2, 3, 2), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2)]], [[(2, 1, 2), (1, 2), (2, 1), (1, 2)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2, 3, 4), (1,)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (5,)]], [[(1, 7, 2, 3, 6), (0,), (2, 3, 4), (5, 3, 4, 5), (1, 2), (5, 3, 4, 5)]], [[(1, 1), (1, 0, 2, 3, 4), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (1, 2, 3), (1, 2)]], [[(2, 1), (1, 2), (2, 1), (1, 3), (1, 2), (1, 2)]], [[(2, 1, 2), (1, 2), (2, 1, 1, 2), (2, 1), (1, 2), (2, 1, 2)]], [[(1, 2), (2, 1), (1, 3, 2), (2, 1), (0, 2), (1, 2), (1, 3, 2)]], [[(2, 1), (1, 2, 1), (2, 1), (1, 2)]], [[(2, 1, 3), (1, 2, 3)]], [[(2, 1, 2), (1, 2), (2, 1, 1, 2), (2, 1), (1, 2), (2, 1, 2), (1, 2)]], [[(1, 2), (2, 8, 1), (1, 2)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (5, 5), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2)]], [[(1,), (1, 2), (2, 8, 1, 8)]], [[(1, 2), (2, 1), (3, 4), (4, 3), (4, 5), (1,), (4,), (2, 1), (2, 1), (4,)]], [[(2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (), (1, 2, 1), (1, 2, 3, 4)]], [[(2, 1), (8, 1, 2), (1, 2), (2, 1), (1, 2)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (), (6, 7, 8, 9), (3, 2), (5,)]], [[(2, 8, 1), (2, 8, 1), (2, 8, 1)]], [[(0,), (1, 2, 3, 4), (5, 3, 4, 5)]], [[(1, 2), (2, 1), (3, 4), (4, 3), (4, 5), (1,), (5,), (2, 1), (2, 1), (4,)]], [[(5, 5), (2, 3, 2), (3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (6, 7, 8, 9), (3, 2)]], [[(1, 2, 2, 2), (2, 1), (8, 1, 2), (1, 2)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (5, 5), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (5,)]], [[(1, 2), (2, 1, 3), (2, 1, 3, 2), (1, 2, 3)]], [[(1, 1), (1,), (2,), (0, 2), (2, 1), (8, 1, 2)]], [[(0, 2), (1, 2), (2, 1), (1, 2), (2, 1), (1, 3)]], [[(1, 1), (2,), (0, 2), (2, 1)]], [[(1, 1), (2,), (2,), (2, 1)]], [[(2, 1, 2), (2,), (2, 1, 2), (1, 2), (2, 2, 1, 2)]], [[(1,), (2,), (0, 2), (2, 1)]], [[(3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (6, 7, 8, 9), (3, 2)]], [[(2,), (1, 1), (2,), (0, 2), (2, 1), (2,)]], [[(3, 2), (2, 3, 4), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (5,)]], [[(1, 2), (2, 1), (1,), (0, 2), (1, 2)]], [[(6, 2, 8, 2, 1, 8)]], [[(1, 3, 2), (1, 2), (1, 2)]], [[(0,), (1, 2, 3, 4), (5, 3, 4, 5, 4), (5, 3, 4, 5)]], [[(2,), (1, 1, 1), (2,), (0, 2), (2, 1), (2,)]], [[(5, 5), (2, 3, 2), (3, 2), (2, 3, 4), (5,), (6, 7, 8, 9), (1, 2), (5,), (5,), (6, 7, 8, 9), (3, 2), (6, 7, 8, 9), (2,), (3, 2)]], [[(2, 1, 3), (1, 2), (1, 2, 3)]], [[(1,), (2, 3, 4), (1, 2, 3, 4), (3, 4, 5), (1, 2, 3, 4), (1,)]], [[(2, 2), (2, 1), (1, 3, 2), (1,), (1, 1, 2, 2), (1, 2), (1, 3)]], [[(1,), (1, 2), (2, 8, 8), (2, 8, 1, 8)]], [[(2, 1), (1, 2)]]]
results = [{(1, 3): 2, (2, 5): 2, (3, 6): 1}, {(2, 4): 2, (3, 6): 2, (4, 7): 1}, {(2, 13): 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}, {(2, 2): 2, (1, 3): 3}, {(1,): 2, (2, 3): 2, (4, 5, 6): 1, (7, 8): 1, (9,): 1}, {(1, 2): 2, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 2}, {}, {(1, 2): 2}, {(1, 2): 3}, {(1, 2): 4}, {(1, 2): 4, (1, 3): 1}, {(1, 2, 3): 3}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 1, (3, 4, 5): 1, (1, 2): 1}, {(1, 2): 4, (3, 4): 2}, {(1, 2): 2, (1,): 1, (1, 2, 8): 1}, {(1, 2): 4, (1, 2, 3): 1}, {(1, 2): 4, (1, 2, 3): 1, (1,): 1}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (): 1, (1, 2): 1}, {(1, 2): 4}, {(2, 3): 2, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 2, (1, 2): 1}, {(1, 2): 4, (1, 2, 3): 1, (1, 1): 1}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (): 1}, {(1, 2): 1, (1, 2, 4): 1}, {(1, 2): 2, (2,): 1, (1, 2, 8): 1}, {(5, 5): 1, (2, 3): 2, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 2, (1, 2): 1}, {(1, 2, 3): 3, (1, 2, 3, 3): 1}, {(1, 2): 5, (1, 3): 1}, {(1, 2): 2, (2,): 1, (0, 2): 1, (1, 2, 8): 1}, {(5, 5): 1, (2, 3): 3, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 3, (1, 2): 1}, {(1, 2): 4, (3, 4): 2, (1,): 1}, {(1, 2): 1}, {(2, 2): 3, (1, 3): 4}, {(1, 2): 2, (2,): 2, (0, 2): 1, (1, 2, 7, 8): 1}, {(1, 2): 3, (1, 2, 3): 1, (1,): 1, (0, 2): 1}, {(1, 2): 3, (1, 2, 3): 1, (1,): 2, (0, 2): 1}, {(1, 2): 1, (1, 2, 8): 1}, {(1, 2): 3, (1, 1, 2): 1, (1, 3): 1}, {(1, 2): 1, (1, 2, 8, 8): 1}, {(1, 2): 1, (1, 2, 3): 3}, {(1, 2): 4, (1,): 1}, {(2, 2): 1, (1, 2): 3, (1, 2, 3): 1, (1,): 1, (1, 2, 2): 1}, {(1,): 2, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (): 1, (1, 2): 1}, {(1, 2): 1, (1, 2, 3): 2}, {(1, 2): 2, (2,): 1, (0, 2): 1, (1, 2, 8): 2}, {(1, 1): 1, (1, 2): 2}, {(1,): 1, (2,): 1, (0, 2): 1, (1, 2): 1, (1, 2, 8): 1}, {(1, 2): 5}, {(1, 2): 3, (1, 2, 3): 2, (1,): 1, (0, 2): 1}, {(1, 2, 8, 8): 1}, {(1, 2): 3, (2,): 1}, {(1, 2): 4, (1, 3): 1}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (False, False, True): 1}, {(1, 2): 1, (2,): 1, (0, 2): 1}, {(1, 2): 4, (3, 4): 2, (1,): 1, (4,): 1}, {(1,): 2, (2, 3, 4): 1, (1, 2, 3, 4): 3, (3, 4, 5): 1, (): 1, (1, 2): 1}, {(1, 2): 3, (1,): 2, (3, 4): 1}, {(1,): 1, (2,): 1, (0, 2): 1, (0, 2, 2): 1, (1, 2): 1, (1, 2, 8): 1}, {(1, 2): 5, (1, 2, 3): 2}, {(0,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 1, (3, 4, 5, 5): 1, (1, 2): 1}, {(1, 2): 2, (2,): 1, (1, 2, 7, 8): 1, (2, 2): 1}, {(1, 2): 3, (2,): 1, (1, 2, 8): 1}, {(1, 2, 3, 6, 7): 1, (0,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 1, (3, 4, 5, 5): 2, (1, 2): 1}, {(): 3, (2, 3, 4): 1, (1, 2, 3, 4): 3, (3, 4, 5): 1, (1, 2): 1}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 1, (3, 4, 5): 1, (1, 2, 3): 1, (): 1, (1, 2): 1}, {(1, 1): 1, (2,): 1, (0, 2): 1, (1, 2): 1, (1, 2, 8): 1}, {(1,): 1, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 2, (False, False, True): 1}, {(1, 2, 8): 1}, {(1, 2): 3, (1, 2, 3): 1}, {(2, 3): 2, (2, 3, 4): 1, (2, 2, 3): 1, (5,): 3, (6, 7, 8, 9): 2, (1, 2): 1}, {(1, 2, 2): 1, (1, 2): 3}, {(1,): 2, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (): 1}, {(2, 3): 2, (2, 3, 4): 1, (5,): 4, (6, 7, 8, 9): 2, (1, 2): 1}, {(1, 2, 3, 6, 7): 1, (0,): 1, (2, 3, 4): 1, (3, 4, 5, 5): 2, (1, 2): 1}, {(1, 1): 1, (0, 1, 2, 3, 4): 1, (2, 3, 4): 1, (1, 2, 3, 4): 1, (3, 4, 5): 1, (1, 2, 3): 1, (1, 2): 1}, {(1, 2): 5, (1, 3): 1}, {(1, 2, 2): 2, (1, 2): 3, (1, 1, 2, 2): 1}, {(1, 2): 4, (1, 2, 3): 2, (0, 2): 1}, {(1, 2): 3, (1, 1, 2): 1}, {(1, 2, 3): 2}, {(1, 2, 2): 2, (1, 2): 4, (1, 1, 2, 2): 1}, {(1, 2): 2, (1, 2, 8): 1}, {(2, 3): 2, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 2, (5, 5): 1, (1, 2): 1}, {(1,): 1, (1, 2): 1, (1, 2, 8, 8): 1}, {(1, 2): 4, (3, 4): 2, (4, 5): 1, (1,): 1, (4,): 2}, {(2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1, (): 1, (1, 1, 2): 1}, {(1, 2): 4, (1, 2, 8): 1}, {(2, 3): 2, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 2, (1, 2): 1, (): 1}, {(1, 2, 8): 3}, {(0,): 1, (1, 2, 3, 4): 1, (3, 4, 5, 5): 1}, {(1, 2): 4, (3, 4): 2, (4, 5): 1, (1,): 1, (5,): 1, (4,): 1}, {(5, 5): 1, (2, 2, 3): 1, (2, 3): 3, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 3, (1, 2): 1}, {(1, 2, 2, 2): 1, (1, 2): 2, (1, 2, 8): 1}, {(2, 3): 2, (2, 3, 4): 1, (5,): 4, (6, 7, 8, 9): 2, (5, 5): 1, (1, 2): 1}, {(1, 2): 1, (1, 2, 3): 2, (1, 2, 2, 3): 1}, {(1, 1): 1, (1,): 1, (2,): 1, (0, 2): 1, (1, 2): 1, (1, 2, 8): 1}, {(0, 2): 1, (1, 2): 4, (1, 3): 1}, {(1, 1): 1, (2,): 1, (0, 2): 1, (1, 2): 1}, {(1, 1): 1, (2,): 2, (1, 2): 1}, {(1, 2, 2): 2, (2,): 1, (1, 2): 1, (1, 2, 2, 2): 1}, {(1,): 1, (2,): 1, (0, 2): 1, (1, 2): 1}, {(2, 3): 3, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 3, (1, 2): 1}, {(2,): 3, (1, 1): 1, (0, 2): 1, (1, 2): 1}, {(2, 3): 2, (2, 3, 4): 1, (6, 7, 8, 9): 2, (1, 2): 1, (5,): 3}, {(1, 2): 3, (1,): 1, (0, 2): 1}, {(1, 2, 2, 6, 8, 8): 1}, {(1, 2, 3): 1, (1, 2): 2}, {(0,): 1, (1, 2, 3, 4): 1, (3, 4, 4, 5, 5): 1, (3, 4, 5, 5): 1}, {(2,): 3, (1, 1, 1): 1, (0, 2): 1, (1, 2): 1}, {(5, 5): 1, (2, 2, 3): 1, (2, 3): 3, (2, 3, 4): 1, (5,): 3, (6, 7, 8, 9): 3, (1, 2): 1, (2,): 1}, {(1, 2, 3): 2, (1, 2): 1}, {(1,): 2, (2, 3, 4): 1, (1, 2, 3, 4): 2, (3, 4, 5): 1}, {(2, 2): 1, (1, 2): 2, (1, 2, 3): 1, (1,): 1, (1, 1, 2, 2): 1, (1, 3): 1}, {(1,): 1, (1, 2): 1, (2, 8, 8): 1, (1, 2, 8, 8): 1}, {(1, 2): 2}]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "check_occurences"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ['assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}', 'assert check_occurences([(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}', 'assert check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13): 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}']:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
