import numpy as np
[]

def is_floats(x) -> bool:
    """Helper function to check float values for comparison"""
    if isinstance(x, float):
        return True
    if isinstance(x, (list, tuple)):
        return all(isinstance(i, float) for i in x)
    if isinstance(x, np.ndarray):
        return x.dtype == np.float64 or x.dtype == np.float32
    return False

def assertion(out, exp, atol):
    """Custom assertion function that handles float comparisons"""
    # Special handling for booleans
    if isinstance(out, bool) or isinstance(exp, bool):
        assert out == exp, f"out: {out}, exp: {exp}"
        return
        
    # Float comparison setup
    if atol == 0 and is_floats(exp):
        atol = 1e-6
    
    # Handle set conversion for sequences
    if isinstance(out, (list, tuple)) and isinstance(exp, (list, tuple)):
        out = set(out)
        exp = set(exp)
    
    # Do the actual comparison
    if out != exp and atol != 0:
        assert np.allclose(out, exp, rtol=1e-07, atol=atol)
    else:
        assert out == exp, f"out: {out}, exp: {exp}"

# Test data
inputs = [[3], [4], [5], [100], [0], [1], [1234], [99], [False], [1235], [True], [1233], [98], [97], [87], [2], [1232], [1236], [1231], [101], [88], [1237], [86], [20], [21], [89], [102], [103], [6], [96], [1230], [104], [91], [1239], [92], [22], [90], [7], [1238], [23], [95], [1229], [10], [19], [85], [1240], [11], [8], [1241], [18], [84], [24], [9], [93], [94], [1228], [17], [83], [12], [13], [82], [25], [1227], [67], [81], [1226], [1225], [26], [1242], [68], [1243], [16], [73], [105], [1224], [66], [65], [14], [1223], [74], [75], [64], [15], [27], [106], [72], [80], [62], [43], [78], [76], [44], [69], [79], [70], [45], [46], [1244], [42], [107], [29], [61], [108], [71]]
results = [7, 17, 41, 94741125149636933417873079920900017937, 1, 1, 11070461126469704445857205916408248777637956359108202247215567087245825411034542077193285208673662845530406197378038600783464071372920693359444016222180381389905980991065467353785957406443700192367685007467808265165494745282947594232503881714323669003012421472088007464953255009113988416485898248182055555334568195832616562650493206887176361720012543749370964796592752997488572076292805796271780579414934813536994670467398341684200726289390769416703100723934120098628466883, 39243058951466341909004733505464609607, 1, 26726457393247291889557573546484894579129028929470427166997651185354021529309348385731516503113542214113143845255684430905440019857803445972891666327686790045204345937734740031840934833502727814815953317516311045532396295877859837047475730738741659146213440989820973420566950241209391541905044182616152832551833331445823328577412432142459322340111432290826209209527350668554892399746055490736189176091160755409375364812889302698610658364513902852989763894454253210942694759, 1, 4585535140307882997843161713668397023853116211254022672566517010862370707240264231344946085766216523052331450499607229338511877111962059254003633883326027265392383955603805324269020020615327430080583302580694515201406805311964648582467967310094321140188598045644958490660440222981414708933247686252041721882696939780590203276426018368106598900086344792084279616341844673577748247160443898192628017261291128335386023878092619330209205785732364019583562446586013013685760993, 16255007246704249599863612909970798723, 6733044458057842709277507685523012161, 1001047369445486500122677053453007, 3, 1899390845853938450170882489071454729931723936600156902082533065521083996554013614503393037141229799425743296378824142106440317148996574851436748455528326859121213079857856705247917365213045332206518402306419234762681134659018297067567947094135026722635225380798090483632374563151158998619402875677972111569174316271436156097641170150963163919839854165202405563909063650333075581971917999886524544892352556866222622711213103023782314717926041377535975830762094071256944897, 64523375912964288224972353009378037935896014218049056581210869457953868469653238848656318214900747273756693887889407462594344111088527585305227348877553961480314672866534947417467827073449155821999591642500430356230287337038667268327455343191806987295439303451729954306087155491532771500295986613414361220438234858724263219805318071172095006400235408331023383215647454334598356875784916777744158931597256324355745400093176947081422043018418575122682628512842626520513856401, 786753448600006097501396735525487563989668338053708868401450879820202714132237002338160011483756924200844857741958945125631242813968909551130136972269373547149957795888091913773185290189236765667546497967856045676044535993928054447332073121824267694918147284048777523395691096679096711694441934896097498744348307237717891081143678066180271060406636461679468488523717372911597083216607898419578927476586014602940778455666413282644576349880281264511610785061824871171871199, 228725309250740208744750893347264645481, 2416742135893203745440147513823297, 155773209219175868339502279565240970450921057365568540329419390101261758468615826083044152932915036761626531621034499356094128242034858616583346364082794713005833691670804634866776588980401039458815136602517171757992970969955194373702386417122355633737092047893280882032741261224274934542497017409444875273428303048894349768188048574486649335140582248952872975640822259337751606151315889046224507039285673404120866164999243196861454744401351053098355020920139506251970407561, 414647397002230745194793406917283, 22619537, 54608393, 5834531641231893991002972081099601, 552191743651117350907374866615429308899, 1333108796552974910559500626578123263279, 99, 2788918330588564181308597538924774401, 325883948653926255168089018020479601952387260492739165279631305880678568289539609827073014173715951024053580894906251855177831521058755749176474510989579764821297488081672877701546784834571800871425406370707143410592062671162188172903800850486491332798930812700535436840992369792965575230519005885777114080477701796000373935353814018602621799026581241843468586861628904509881415538702203047366689939180527660341065799880276458493162018165478848512754260638444328913202499, 3218409336757067172026376119771675835457, 34006142477945877445895155433144599, 907912797921807918147456103844960928126397315263940814809518689422216529282385608112533401094376678355646045880951311705659329432351348253527186518169081487989797804087093069168818599048903508938074866297586719502425429523853306405166842771995392143276338846369864318775880617104440215713077060274053098808017984961920275280550879014777436688503382061426411644635406205357954744508149278786610853059622879669315821625182569878470117808043592415737140361626382784300879750607, 82098090374248746619236402542311697, 131836323, 14085805418356991727446091676022499, 239, 376069794351316024903976912139859978837738128949186137240049649660477385406884891014744624080730820797009757129958406174782600595158244818471920077043143387491982056208144217151021005034251234739629864847534773872216229276949056015732228177436518254769623399238291718371569677940082640585290021432304111767294840956512962756181415220145393676681399906236769334497291973010101569178416694870193173010168603132597477730091663340804331531821120681319392670353121639024454671523, 318281039, 1155207796880714346660312607673463359, 134985551292153587165218699484528360084893817068230537842188268058845577553157782684013983136325022152737695952146441415275579771851398052777187950290214017507362819724746158370091720520093163924695685226441758854860410651603678101524471420851285029320285658647706649713706357093165561233403923124543270583392903645717143210436050028975027462353473977992531314800459563891834252139203492324845547598224959282258646855905860365658252313549323567486102263784936213345466201, 3363, 9369319, 171752575441025009733090239618441, 2191895390194931861198889119829781835090532759477067766859087028504910443971656107239811426269484177508301848891861029586101259459860941325526293113381306363471577664382330355488658203132058252615779597442708212877067088324655668826065913721427302541322301091978020355923330912148963072011444141980410309383330810880353513317283173249700267053688164029089592623768104383726011058194715252443414879129414362471229120980456803097744567147908305512793673393605887207626214172737, 8119, 577, 5291703578311671640545234343504524598307462834218076348527692746432037417225697822592156253633345033372249743664673370877861848352073230904579772744931694214932953132851753780146135005313020014169634061183003145256559606173164644057298670214849997225920941030325905030622542441402366359735965344234873717574679606722627301915117225514177970795879710119605596892171614972809976860897579783673440611318451604611774063586096176073959252103860203441324487148838157199553308096081, 3880899, 71142246120180725728612927680401, 768398401, 1393, 198202323226443370684367960517767993, 478502736827135487987972323577847683, 55912846069619080837651619051422881782599626356278089595254769762987413183224044459045047901065906718578188990613369024626671977355959643622098610409151729806571848632180560961363343794385473022034035917823625700871241367954831969854858008783921274158359495405122137413579655606634452763711159636690572913691894504566087514481713960652566874319633285858405957260709776726212911260295218397675594742730609095823772088068555727176657391066831713540549733068571902222270097, 1607521, 29468083200663558275864384257639, 19601, 47321, 12206079718853609176884159165123, 1855077841, 23159859152915425489915461381682596519694564355674358651678728532870751186709693765923887334193208715581317970919703366022235817139478765532990729471910557894219122460385036447365032931322217880627613390794507453117927915694014161814755403283442481003566667837462374886547045879896655705981603851162124756009114636584968181472622107669893713714207406275719400279040010439408429618613055529494358112763741090611102679768748911304937531415660140405002797647792408900926007, 22127936779729111812853639, 5055923762956339922096065927393, 9593127763788229857820696288057688743210497644929372291897312697245910809804656927197273232679489287415553048773962292582200343077002112556117151465330614018133603711410488066633277931741037260778809136234610794635385536566803646225347202217036312151226159730197387640485563846841141351747951934366323401673665231396151151536469745312779446891218473306967156702629755847396052023069107338686878517203126914601566728531057904566782328235511432730544137772987084420418083, 3973603625338965774274068805567219033273569065815614067884103138378929567100379911529340868834230140750211873371778780857835130985474540420756426541249329857951915037564060314098477067840143359069995118325285863847156842560406869364060998849369856701114348377067599605575918186214373002485699982429477952661784173792665878399682617044334819931770459661785086873780498744616325572474840852120601078357487261407969222706633102171372874944637274943914522101818240060089841, 4478554083, 12775302546818275142289357806838831031705458427913220463914472521368985278423051752424123933536174244252801336221207771341824956164007403134685838603244694793337483930085837915780928213758098280955047719808714503390186300670984956940663254151127296993164183152629830417168415794953695791483374830450157744532690024325608117147517624278056208645447584268300786408111334329345964779989874819790296101766317571694777248152649155245663071355628712395442647691282201606732830364899, 53421565080956452077519377, 30842308671948221925123949957182186661718379690044517276356637789170007974071801327440404120705693521877852416107088913561511760680088037173951449951421083801607920993023429611707991432829216576079729500800432152036932207515134557938625178517104591212249307335585565864959374031309757942702715005135189206640059655373843536210152474070290388086774878656207169708394283631501906420877329423254032814851086748001328559891394486565285394815117628232209782531402560413018968825879, 665857, 4381219722279095887999111921, 7769927470067109254612252866121474934193, 1645920513110298309272558676923250676663359513298144156129106420488051675603897104138591495011029005915129302030404730866530081106053031714604298382831954302229773636282367438436323796060750542638818899584039066941071851445989907497225204518296598748997462976062188429333727474412395346776551969507367496350096883810819394737104511224109807027677553983396982955068758358163400878119425634445676360488152391785628283117791700224036578346236882842715093569350604300238401, 9165691521498228451812099, 3796553736732654909229441, 114243, 681762599118369155728951451720717679946850039219325755625890297402826215892585703252157878812172128919953269310969319124774968773368476991547829775585421253492367764999325437225829475718642273792357319157207729965013139668427054369610589812776659203119422424943222746908463237389582308932596043414742959961590406171027088925473594596115205876415351694991120963642982028289523816235989583229248357381182477836712656471049701723299718252163509258484334963117031459613039, 10577200073262678228000529443, 25535619868804452344000170807, 1572584048032918633353217, 275807, 10812186007, 18758264276891285681250881852014625703843, 1814760628704486452002305601, 2094232192940929332692027310337, 269812766699283348307203, 14398739476117879, 359313438791966819268004696899, 61648439810871582916000871057, 34761632124320657, 128971066941642015967892393, 867459377074481256712011306719, 311363698964240484013304163, 83922003724759193, 202605639573839043, 74459919890714718992537257721203204355142217808002255016627748099709001226566654407304932174947561288008506168435385598464848477524183477482588738506086862396553325916132697139196911079416531433114506721409578807464050715701254072817913611185336479417662797823800962147087163857573211676888804840720536157812809335073295189567822572418636984818997341580715125824899901592349777621744533666298361731468491067697434367935438128376233860985863968859862212754087322432770768016657, 5964153172084899, 45286456023849680617114016570150726341879, 63018038201, 111760107268250945908601, 109331176324590646915478914992316078387601, 751698464870122983994500719]

def ll_run_tests(response_data):
    """
    Main test function for code evaluation.
    Args:
        response_data: Dict containing response code
    Returns:
        bool: True if all test cases pass
    """
    try:
        # Initialize test environment
        global_namespace = {
            'np': np,
            'assertion': assertion,
            'is_floats': is_floats,
            'inputs': inputs,
            'results': results
        }
        
        # Execute solution code
        response_code = response_data.get('parsed_result', response_data.get('result', ''))
        exec(response_code, global_namespace)
        
        # Verify function exists
        func_name = "newman_prime"
        if func_name not in global_namespace:
            print(f"Function '{func_name}' not found in response")
            return False
        
        # Execute tests
        solution_func = global_namespace[func_name]
        
        # Run input/output tests
        for i, (test_input, expected) in enumerate(zip(inputs, results)):
            try:
                result = solution_func(*test_input)
                assertion(result, expected, 0)
            except AssertionError as e:
                print(f"Test case {i} failed: {str(e)}")
                print(f"Input: {test_input}")
                print(f"Expected: {expected}")
                print(f"Got: {result}")
                return False
        
        # Run assertion-based tests if any
        for test_case in ['assert newman_prime(3) == 7', 'assert newman_prime(4) == 17', 'assert newman_prime(5) == 41']:
            try:
                exec(test_case, global_namespace)
            except AssertionError as e:
                print(f"Assertion test failed: {str(e)}")
                print(f"Test case: {test_case}")
                return False
            
        return True
            
    except Exception as e:
        print(f"Error during test execution: {str(e)}")
        return False
